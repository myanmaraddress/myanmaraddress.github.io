<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1280.htm" />
    <title>Arthas之实例操作 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>Arthas之实例操作</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/xcblog/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<h2 id="arthas之实例操作">Arthas之实例操作</h2> <h3 id="1-静态类属性操作">1. 静态类属性操作</h3> <p>获取public静态属性</p> <pre><code class="language-bash">ognl -c 7cd84586 '@com.system.framework.ArtahsDemoClassLoader@pubTestPrex' ognl -c 7cd84586 "@com.system.framework.ArtahsDemoClassLoader@pubfinalTestPrex"</code></pre> <p>输出各式 @Type[属性值]，内容如下</p> <pre><code class="language-java">@String[static public] ... @String[final static public]</code></pre> <p>获取private静态属性</p> <pre><code class="language-bash">ognl -c 7cd84586 '@com.system.framework.ArtahsDemoClassLoader@privTestPrex' ognl -c 7cd84586 '@com.system.framework.ArtahsDemoClassLoader@privFnalTestPrex'</code></pre> <pre><code class="language-java">@String[static private] ... @String[final static private]</code></pre> <p>修改public静态属性,被final修饰，不能被修改</p> <pre><code class="language-java">// author:herbert qq:464884492 date:20220331 测试代码想修改FINAL修饰符，结果没有成功 @Test public void testModifyFinal() throws Exception {   Field finalField = this.getClass().getDeclaredField("privFnalTestPrex");   finalField.setAccessible(true);   System.out.println("==========初始值==========");   System.out.println(finalField.get(null));   Field modiField = Field.class.getDeclaredField("modifiers");   modiField.setAccessible(true);   modiField.setInt(finalField, finalField.getModifiers() &amp; ~Modifier.FINAL);   finalField.set(null, "修改后FInal");   System.out.println("==========修改值==========");   System.out.println(privFnalTestPrex); }</code></pre> <p>静态变量赋值，不能通过=直接赋值，需要采用反射的方式设置值</p> <pre><code class="language-bash">ognl '#c=@com.system.framework.ArtahsDemoClassLoader@class,#f=#c.getDeclaredField("pubTestPrex"),#f.set(#c,"modify static public ")'</code></pre> <p>修改private静态属性,需要在反射时调用方法<code>setAccessible</code>,使<strong>private</strong>特殊转化为<strong>public</strong></p> <pre><code class="language-bash">ognl '#c=@com.system.framework.ArtahsDemoClassLoader@class,#f=#c.getDeclaredField("privTestPrex"),#f.setAccessible(true),#f.set(#c,"modify static private ")'</code></pre> <h3 id="2-静态类方法调用">2. 静态类方法调用</h3> <p>静态方法调用和静态属性一样，格式为<code>@class@method(args)</code></p> <p>无参数调用</p> <pre><code class="language-bash">ognl -c 7cd84586 '@com.system.framework.ArtahsDemoClassLoader@setPublicStaticMethod()' ognl -c 7cd84586 '@com.system.framework.ArtahsDemoClassLoader@modfiyPrivateStaticFiled()'</code></pre> <pre><code class="language-java">... ======第5次输出====== 源文件初始输出==&gt;static public/static private/testRefect--1/final static public/final static private 源文件初始输出==&gt;static public/static private/testRefect--2/final static public/final static private ======第6次输出====== 源文件初始输出==&gt;modify by method static public/static private/testRefect--1/final static public/final static private 源文件初始输出==&gt;modify by method static public/static private/testRefect--2/final static public/final static private ... ======第11次输出====== 源文件初始输出==&gt;modify by method static public/static private/testRefect--1/final static public/final static private 源文件初始输出==&gt;modify by method static public/static private/testRefect--2/final static public/final static private ======第12次输出====== 源文件初始输出==&gt;modify by method static public/modify by method static private/testRefect--1/final static public/final static private 源文件初始输出==&gt;modify by method static public/modify by method static private/testRefect--2/final static public/final static private ... // author:herbert qq:464884492 date:20220331</code></pre> <p>有参数调用</p> <pre><code class="language-bash">ognl -c 7cd84586 '@com.system.framework.ArtahsDemoClassLoader@getPublicStaticMethod("input params")' ... ognl -c 7cd84586 '@com.system.framework.ArtahsDemoClassLoader@getStaticPrivateMethod("input params")'</code></pre> <pre><code class="language-java">@String[input params &lt;==&gt; public static method return string] ... @String[input params &lt;==&gt; private static method return string]</code></pre> <p>从以上的测试结果来说，静态方法不管是<strong>public</strong>还是<strong>private</strong>都可以直接调用。</p> <h3 id="3-获取非静态类实例">3. 获取非静态类实例</h3> <p>查看某个类实例，无 --limit 参数默认10个</p> <pre><code class="language-bash">vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express 'instances.length' vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express 'instances[0]'</code></pre> <pre><code class="language-java">@EncryptClass[][     @EncryptClass[com.system.framework.EncryptClass@3c573d32],     @EncryptClass[com.system.framework.EncryptClass@68390fae], ] ... @Integer[2] ... @EncryptClass[     note=@String[testRefect--1], ]</code></pre> <p>经过上边测试发现，一个类存在多个classloader加载时，需要<strong>指定classloader</strong>。但从返回结果看，返回了<strong>所有classloader加载的实例</strong></p> <h3 id="4-实例方法调用">4. 实例方法调用</h3> <p>调用实例<code>getNote</code> 和<code>setNote</code> 方法</p> <pre><code class="language-bash">vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances[0],#val.getNote()' vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances[0],#val.setNote("modify by instance"+#val.getNote())'</code></pre> <pre><code class="language-java">@String[testRefect--1]  ======第7次输出====== 源文件初始输出==&gt;static public/static private/testRefect--1/final static public/final static private 源文件初始输出==&gt;static public/static private/testRefect--2/final static public/final static private ======第8次输出====== 源文件初始输出==&gt;static public/static private/modify by instancetestRefect--1/final static public/final static private 源文件初始输出==&gt;static public/static private/testRefect--2/final static public/final static private</code></pre> <p>从控制台输出结果，对比第7次和8次输出，我们可以发现第一个loader加载的class实例已经成功修改了</p> <h3 id="5-实例属性操作">5. 实例属性操作</h3> <p>获取或者修改第一个实例 note 属性</p> <pre><code class="language-bash">vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances[1].note' vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances[1],#val.note="modify by instance"+#val.note'</code></pre> <pre><code class="language-java">@String[testRefect--2] ... ======第121次输出====== 源文件初始输出==&gt;static public/static private/modify by instancetestRefect--1/final static public/final static private 源文件初始输出==&gt;static public/static private/testRefect--2/final static public/final static private ======第122次输出====== 源文件初始输出==&gt;static public/static private/modify by instancetestRefect--1/final static public/final static private 源文件初始输出==&gt;static public/static private/modify by instancetestRefect--2/final static public/final static private</code></pre> <p>从控制台输出结果，对比第121次和122次输出，我们可以发现第二个loader加载的class实例已经成功修改了</p> <h3 id="6-条件操作">6. 条件操作</h3> <p>返回的对象集合，可以做二次筛选<strong>投影</strong>操作，也可以带条件查询符合的数据</p> <pre><code class="language-bash">vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances' vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances.{note}' vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances.{#this.note}' vmtool -c 3e2e18f2 -a getInstances --className *EncryptClass --express '#val=instances.{? #this.note.indexOf("1")&gt;0}.{note}'</code></pre> <pre><code class="language-java">@EncryptClass[][     @EncryptClass[com.system.framework.EncryptClass@52790e67],     @EncryptClass[com.system.framework.EncryptClass@822cf83], ] ... @ArrayList[     @String[modify by instancetestRefect--1],     @String[modify by instancetestRefect--2], ] ... @ArrayList[     @String[modify by instancetestRefect--1],     @String[modify by instancetestRefect--2], ] ... @ArrayList[     @String[modify by instancetestRefect--1], ]</code></pre> <h4 id="7-总结"></h4> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1279.htm">Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段</a></p>
                                                        <p>下一个：<a href="/html/category/article-1281.htm">使用EasyExcel实现自定义表头导出</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1298.htm" title="利用Redis实现防止接口重复提交功能">利用Redis实现防止接口重复提交功能</a></li>
                        <li class="py-2"><a href="/html/category/article-1285.htm" title="C语言栈与队列面试题详解_C 语言">C语言栈与队列面试题详解_C 语言</a></li>
                        <li class="py-2"><a href="/html/category/article-1310.htm" title="TensorFlow 模型保存/载入的两种方法">TensorFlow 模型保存/载入的两种方法</a></li>
                        <li class="py-2"><a href="/html/category/article-1297.htm" title="vue2设置保存自动执行run lint配置步骤">vue2设置保存自动执行run lint配置步骤</a></li>
                        <li class="py-2"><a href="/html/category/article-1294.htm" title="OpenFeign、Feign以及Ribbon关系介绍">OpenFeign、Feign以及Ribbon关系介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-1262.htm" title="Linux里面磁盘文件咋删除呀,清理Linux磁盘空间的方法有哪些？">Linux里面磁盘文件咋删除呀,清理Linux磁盘空间的方法有哪些？</a></li>
                        <li class="py-2"><a href="/html/category/article-1288.htm" title="【EF框架】DbContext的使用">【EF框架】DbContext的使用</a></li>
                        <li class="py-2"><a href="/html/category/article-1286.htm" title="优雅处理API统一返回">优雅处理API统一返回</a></li>
                        <li class="py-2"><a href="/html/category/article-1313.htm" title="二叉树与堆">二叉树与堆</a></li>
                        <li class="py-2"><a href="/html/category/article-1296.htm" title="Android 12(S) 图像显示系统 &#8211; SurfaceFlinger 之 VSync &#8211; 中篇（十七）">Android 12(S) 图像显示系统 &#8211; SurfaceFlinger 之 VSync &#8211; 中篇（十七）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>