<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1076.htm" />
    <title>Top 20 Docker 面试题（附答案） - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>Top 20 Docker 面试题（附答案）</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220829/6c648b055b0df3789f70ec881017ee16.jpg" alt="Top 20 Docker 面试题（附答案）"></p> <p>Docker 是一种流行的开源软件平台，可简化创建、管理、运行和分发应用程序的过程。它使用容器来打包应用程序及其依赖项。Docker 主导了市场。</p> <p>大多数顶级云和 IT 公司都采用 Docker 来简化其应用程序开发工作流程。对具有 Docker 经验的人才的需求很高。</p> <p>破解 Docker 面试，我们收集了 20 大 Docker 面试问题，以帮助您准备 Docker 面试。</p> <h2><a id="Docker__9" rel="nofollow"></a>Docker 面试问答</h2> <h3><a id="1__Docker__11" rel="nofollow"></a>1. 什么是 Docker 容器？</h3> <p><strong>Docker 容器</strong> 在应用程序层创建抽象并将应用程序及其所有依赖项打包在一起。这使我们能够快速可靠地部署应用程序。容器不需要我们安装不同的操作系统。相反，它们使用底层系统的 CPU 和内存来执行任务。这意味着任何容器化应用程序都可以在任何平台上运行，而不管底层操作系统如何。我们也可以将容器视为 Docker 镜像的运行时实例。</p> <h3><a id="2__DockerFile_15" rel="nofollow"></a>2. 什么是 DockerFile？</h3> <p>Dockerfile 是一个文本文件，其中包含我们需要运行以构建 Docker 映像的所有命令。Docker 使用 Dockerfile 中的指令自动构建镜像。我们可以<code>docker build</code>用来创建按顺序执行多个命令行指令的自动构建。</p> <h3><a id="3__Docker__Docker__19" rel="nofollow"></a>3. 如何从 Docker 镜像创建 Docker 容器？</h3> <p>为了从镜像创建容器，我们从 Docker 存储库中提取我们想要的镜像并创建一个容器。我们可以使用以下命令：</p> <blockquote> <p>$ docker run -it -d &lt;image_name&gt;</p> </blockquote> <h3><a id="4_Docker_Compose__JSON__YAML__27" rel="nofollow"></a>4. Docker Compose 可以使用 JSON 代替 YAML 吗？</h3> <p>是的，我们可以对<code>Docker Compose</code>文件使用 JSON 文件而不是<code>YAML</code></p> <blockquote> <p>$ docker-compose -f docker-compose.json up</p> </blockquote> <h3><a id="5_Docker_Swarm_35" rel="nofollow"></a>5. 什么是Docker Swarm？</h3> <p>Docker Swarm 是一个容器编排工具，它允许我们跨不同主机管理多个容器。使用 Swarm，我们可以将多个 Docker 主机变成单个主机，以便于监控和管理。</p> <h3><a id="6__39" rel="nofollow"></a>6. 如果你想使用一个基础镜像并对其进行修改，你怎么做？</h3> <p>我们可以使用以下 Docker 命令将图像从 Docker Hub 拉到我们的本地系统上：</p> <blockquote> <p>$ docker pull &lt;image_name&gt;</p> </blockquote> <h3><a id="7__47" rel="nofollow"></a>7. 如何启动、停止和终止容器？</h3> <p>要启动 Docker 容器，请使用以下命令：</p> <blockquote> <p>$ docker start &lt;container_id&gt;</p> </blockquote> <p>要停止 Docker 容器，请使用以下命令：</p> <blockquote> <p>$ docker stop &lt;container_id&gt;</p> </blockquote> <p>要终止 Docker 容器，请使用以下命令：</p> <blockquote> <p>$ docker kill &lt;container_id&gt;</p> </blockquote> <h3><a id="8_Docker__67" rel="nofollow"></a>8. Docker 运行在哪些平台上？</h3> <p>Docker 在以下 Linux 发行版上运行：</p> <ul> <li>CentOS 6+</li> <li>Gentoo</li> <li>ArchLinux</li> <li>CRUX 3.0+</li> <li>openSUSE 12.3+</li> <li>RHEL 6.5+</li> <li>Fedora 19/20+</li> <li>Ubuntu 12.04、13.04</li> </ul> <p>Docker 还可以通过以下云服务在生产中使用：</p> <ul> <li>微软Azure</li> <li>谷歌计算引擎</li> <li>亚马逊 AWS EC2</li> <li>亚马逊 AWS ECS</li> <li>机架空间</li> </ul> <blockquote> <p><strong>提示</strong>：我们始终建议您在面试之前进行一些公司研究，要为这个特定问题做准备，请了解公司如何使用 Docker 并在您的答案中包含他们使用的平台。</p> </blockquote> <h3><a id="9__Docker__90" rel="nofollow"></a>9. 解释 Docker 组件。</h3> <p>三个架构组件包括 Docker 客户端、主机和注册表。</p> <ul> <li> <p><strong>Docker 客户端</strong>：该组件执行构建和运行操作以与 Docker 主机通信。</p> </li> <li> <p><strong>Docker 主机</strong>：该组件包含 Docker 守护程序、Docker 镜像和 Docker 容器。守护进程建立到 Docker Registry 的连接。</p> </li> <li> <p><strong>Docker Registry</strong>：该组件存储 Docker 镜像。它可以是公共注册表，例如 Docker Hub 或 Docker Cloud，也可以是私有注册表。</p> </li> </ul> <h3><a id="10__100" rel="nofollow"></a>10. 虚拟化和容器化有什么区别？</h3> <p><strong>虚拟化</strong></p> <p>虚拟化帮助我们在单个物理服务器上运行和托管多个操作系统。在虚拟化中，管理程序为客户操作系统提供了一个虚拟机。VM 形成了硬件层的抽象，因此主机上的每个 VM 都可以充当物理机。</p> <p><strong>容器化</strong></p> <p>容器化为我们提供了一个独立的环境来运行我们的应用程序。我们可以在单个服务器或 VM 上使用相同的操作系统部署多个应用程序。容器构成了应用层的抽象，所以每个容器代表一个不同的应用。</p> <h3><a id="11__110" rel="nofollow"></a>11. 管理程序的功能是什么？</h3> <p>管理程序或虚拟机监视器是帮助我们创建和运行虚拟机的软件。它使我们能够使用单个主机来支持多个来宾虚拟机。它通过划分主机的系统资源并将它们分配给已安装的来宾环境来实现这一点。可以在单个主机操作系统上安装多个操作系统。有两种类型的管理程序：</p> <ul> <li> <p><strong>Native</strong>：本机管理程序或裸机管理程序，直接在底层主机系统上运行。它使我们可以直接访问主机系统的硬件，并且不需要基本服务器操作系统。</p> </li> <li> <p><strong>托管</strong>：托管管理程序使用底层主机操作系统。</p> </li> </ul> <h3><a id="12_Dockerfile_118" rel="nofollow"></a>12. 如何构建Dockerfile？</h3> <p>为了使用我们概述的规范创建映像，我们需要构建一个 Dockerfile。要构建 Dockerfile，我们可以使用以下<code>docker build</code>命令：</p> <blockquote> <p>$ docker build<path to=""></path></p> </blockquote> <h3><a id="13__Docker_Registry_124" rel="nofollow"></a>13. 使用什么命令将新镜像推送到 Docker Registry？</h3> <p>要将新镜像推送到 Docker Registry，我们可以使用以下<code>docker push</code>命令：</p> <blockquote> <p>$ docker push myorg/img</p> </blockquote> <h3><a id="14Docker_130" rel="nofollow"></a>14.什么是Docker引擎？</h3> <p>Docker Engine 是一种开源容器化技术，我们可以使用它来构建和容器化我们的应用程序。Docker Engine 由以下组件支持：</p> <ul> <li>Docker 引擎 REST API</li> <li>Docker 命令行界面 (CLI)</li> <li>Docker 守护进程</li> </ul> <h3><a id="15__138" rel="nofollow"></a>15. 如何访问正在运行的容器？</h3> <p>要访问正在运行的容器，我们可以使用以下命令：</p> <blockquote> <p>$ docker exec -it &lt;container_id&gt; bash</p> </blockquote> <h3><a id="16_146" rel="nofollow"></a>16.如何列出所有正在运行的容器？</h3> <p>要列出所有正在运行的容器，我们可以使用以下命令：</p> <blockquote> <p>$ docker ps</p> </blockquote> <h3><a id="17__Docker__154" rel="nofollow"></a>17. 描述 Docker 容器的生命周期。</h3> <p>Docker 容器经历以下阶段：</p> <ul> <li>创建容器</li> <li>运行容器</li> <li>暂停容器（可选）</li> <li>取消暂停容器（可选）</li> <li>启动容器</li> <li>停止容器</li> <li>重启容器</li> <li>杀死容器</li> <li>销毁容器</li> </ul> <h3><a id="18_Docker_168" rel="nofollow"></a>18. 什么是Docker对象标签？</h3> <p>Docker 对象标签是存储为字符串的键值对。它们使我们能够将元数据添加到 Docker 对象，例如容器、网络、本地守护进程、图像、Swarm 节点和服务。</p> <h3><a id="19_Docker_Compose12_172" rel="nofollow"></a>19. 使用Docker Compose时如何保证容器1先于容器2运行？</h3> <p>Docker Compose 在继续下一个容器之前不会等待容器准备就绪。为了控制我们的执行顺序，我们可以使用“取决于”条件，<code>depends_on</code>。这是在 docker-compose.yml 文件中使用的示例：</p> <pre><code>version: "2.4" services:  backend:    build: .    depends_on:      - db  db:    image: postgres</code></pre> <p>该<code>docker-compose up</code>命令将按照我们指定的依赖顺序启动和运行服务。</p> <h3><a id="20docker_create_189" rel="nofollow"></a>20.<code>docker create</code>命令有什么作用？</h3> <p>该<code>docker create</code>命令在指定映像上创建可写容器层，并准备该映像以运行指定命令。</p> </div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1075.htm">【硬刚ES】ES基础（三十五）分页与遍历 &#8211; From, Size, Search_after &amp; Scroll API</a></p>
                                                        <p>下一个：<a href="/html/category/article-1077.htm">软件模块之间耦合度的强弱排序</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1329.htm" title="Visual Studio快捷键汇总_实用技巧_">Visual Studio快捷键汇总_实用技巧_</a></li>
                        <li class="py-2"><a href="/html/category/article-1637.htm" title="Java基础之浅谈异常与了解断言">Java基础之浅谈异常与了解断言</a></li>
                        <li class="py-2"><a href="/html/category/article-4131.htm" title="linux单个IP地址绑定多个端口详解">linux单个IP地址绑定多个端口详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1339.htm" title="分享MySQL生产库内存异常增高的排查过程_Mysql_">分享MySQL生产库内存异常增高的排查过程_Mysql_</a></li>
                        <li class="py-2"><a href="/html/category/article-1309.htm" title="sqlserver 中使用sqlcmd 执行几百M的.sql文件">sqlserver 中使用sqlcmd 执行几百M的.sql文件</a></li>
                        <li class="py-2"><a href="/html/category/article-3432.htm" title="layui form.render(&#8216;select&#8217;, &#8216;test2&#8217;) 更新渲染">layui form.render(&#8216;select&#8217;, &#8216;test2&#8217;) 更新渲染</a></li>
                        <li class="py-2"><a href="/html/category/article-2537.htm" title="基于全志A40i开发板Linux-RT内核应用开发教程">基于全志A40i开发板Linux-RT内核应用开发教程</a></li>
                        <li class="py-2"><a href="/html/category/article-3763.htm" title="idea配置tomcat启动web项目">idea配置tomcat启动web项目</a></li>
                        <li class="py-2"><a href="/html/category/article-1313.htm" title="二叉树与堆">二叉树与堆</a></li>
                        <li class="py-2"><a href="/html/category/article-1638.htm" title="python之33个关键字详解_Python之33个关键字是哪些">python之33个关键字详解_Python之33个关键字是哪些</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>