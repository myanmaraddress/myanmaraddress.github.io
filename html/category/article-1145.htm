<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1145.htm" />
    <title>【LINT】cpplint修改版：自定义编码风格检查工具lint_在线工具 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>【LINT】cpplint修改版：自定义编码风格检查工具lint_在线工具</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<h2 id="githubhttpsgithubcomskullboyercode-check">github：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/skullboyer/code-check"  target="_blank"  rel="nofollow">https://github.com/skullboyer/code-check</a><br /> </h2> <h2 id="code-check">Code Check</h2> <ul> <li>本仓介绍的内容涉及代码静态检查和编码风格检查</li> <li>但主要放在编码风格检查，lint是基于google编码风格检查cpplint的修改版，起别名也是为了区别</li> <li>lint较于cpplint优势如下： <ul> <li>lint支持自定义编码风格检查(通过配置文件)，而非cpplint特定于google风格</li> <li>lint支持生成结果文件通过cppcheck上位机查看和跳转</li> </ul> </li> </ul> <h2 id="仓说明">仓说明</h2> <pre><code>. |————doc  (说明文档及过程文件) | |————exe  (打包好的可执行程序) | |————git_hook  (嵌入git的钩子文件) | |————.scripts  (特殊用法的脚本) | |____lint.py  (cpplint修改版) </code></pre> <h2 id="应用场景">应用场景</h2> <blockquote> <p>嵌入git，在提交阶段进行检查</p> </blockquote> <p>将git_hook中的文件放在自己项目的.git/hooks路径下，下次提交时便会触发代码检查</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/1b6f9b6c851fd124c30076e72a8d3e8f.jpg" alt="【LINT】cpplint修改版：自定义编码风格检查工具lint_在线工具"></p> <p>使用cppcheck上位机解析lint检查的结果</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/e92c4da1be59dc6fba304c51a0239495.jpg" alt="【LINT】cpplint修改版：自定义编码风格检查工具lint_在线工具"></p> <blockquote> <p>独立使用，基于特定的文件或文件夹</p> </blockquote> <p>将.scripts中的脚本lint_folder.sh和format_cpplint.sh放在要检查的目录同一级即可</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/a5302ecc885466e8be842e17b7cf141a.jpg" alt="【LINT】cpplint修改版：自定义编码风格检查工具lint_在线工具"></p> <blockquote> <p>嵌入jenkins进行自动化构建检查</p> </blockquote> <h2 id="用法">用法</h2> <pre><code class="language-txt">./lint.exe --help  Syntax: lint  [--verbose=#] [--output=vs7] [--filter=-x,+y,...]               [--counting=total|toplevel|detailed] [--root=subdir]               [--linelength=digits] [--headers=x,y,...]               [--quiet][--help][--useage][--generate][--about]         &lt;file&gt; <div class="down"><a class="d-popup" title="下载链接" href="#button_file"><i class="be be-download"></i>下载地址</a><div class="clear"></div></div> ...    Option:      output=vs7       output is formate: 'emacs', 'vs7', 'eclipse'      verbose=#       output level: 0-5, message less than [verbose] will not be printed      quiet       Don't print anything if no errors are found      filter=-x,+y,...       To see a list of all the categories used in cpplint, pass no arg: --filter=       Examples: --filter=-whitespace,+whitespace/braces                 --filter=whitespace,runtime/printf,+runtime/printf_format                 --filter=-,+build/include_what_you_use      counting=total       Error statistics style. The total number of errors found is always printed       total    =&gt; Total errors found:       toplevel =&gt; Category 'whitespace' errors found:       detailed =&gt; Category 'whitespace/parens' errors found:      root=subdir       The root directory used for deriving header guard CPP variable.       Examples:         code directory: src/chrome/browser/ui/browser/         No flag               =&gt; CHROME_BROWSER_UI_BROWSER_H_         --root=chrome         =&gt; BROWSER_UI_BROWSER_H_         --root=chrome/browser =&gt; UI_BROWSER_H_         --root=..             =&gt; SRC_CHROME_BROWSER_UI_BROWSER_H_      linelength=digits       Code line length, default: 120 characters.      extensions=extension,extension,...       The allowed file extensions that cpplint will check       Examples:         --extensions=hpp,cpp      headers=x,y,...       Examples:         --headers=hpp,hxx         --headers=hpp      help       Displays short usage information and exits.      useage       Displays detaile usage information and exits.      generate       Generate lint config file 'LINT.cfg' and exits      about       Displays version information and exits. </code></pre> <h2 id="配置文件">配置文件</h2> <ol> <li>生成自定义编码风格配置文件LINT.cfg</li> </ol> <pre><code>$ ./lint.exe --generate The LINT.cfg configuration file is generated successfully. </code></pre> <ol start="2"> <li>配置文件说明</li> </ol> <pre><code class="language-python"># Copyright (c) 2022 skull.gu@gmail.com. All rights reserved.  # Stop searching for additional config files. set noparent  # Specifies the line of code for the project linelength=120  # Error filter # -: filter, +: pass filter=+whitespace/preprocess  # It's not worth lint-gardening the file. exclude_files=doc  # The root directories are specified relative to CPPLINT.cfg dir root=  # The header extensions headers=  # rule.1 # Naming rules for file names # 0: indifferent, 1: pure lowercase, 2: lowercase +_, 3: lowercase + digit +_, 4: uppercase, 5: uppercase + digit +_ # default: 3 lint_file_naming=  # rule.2 # Whether copyright is required at the beginning of the file # start of file # -1: forbidden, 0: indifferent, 1: required # default: 1 lint_copyright_sof=  # rule.3 # Whether a new line is required at the end of the file # end of file # -1: forbidden, 0: indifferent, 1: required # default: 1 lint_newline_eof=  # rule.4 # Whether to disable TAB # -1: forbidden, 0: indifferent # default: -1 lint_use_tab=  # rule.5 # The code line length # 0: indifferent, &gt;0: length # default: 120 lint_line_length=  # rule.6 # The number of lines in the function body # 0: indifferent, &gt;0: length # default: 80 lint_function_line=  # rule.7 # Number of Spaces to indent code. # 0: indifferent, &gt;0: length # default: 4 lint_space_indent=  # rule.8 # Whether extra space at the end of a line is allowed # -1: forbidden, 0: indifferent # default: -1 lint_space_eol=  # rule.9 # Whether to allow multiple instructions in a row # -1: forbidden, 0: indifferent # default: -1 lint_multiple_cmd=  # rule.10 # Whether blocks of code are required to use curly braces # -1: forbidden, 0: indifferent, 1: required # default: 1 lint_block_braces=  # rule.11 # Whether to leave a space before or after the keyword # -1: forbidden, 0: indifferent, 1: required # default: 1 lint_space_keyword=  # rule.12 # Whether to require 1 space before and after the operator # -1: forbidden, 0: indifferent, 1: required # default: 1 lint_space_operator=  # rule.13 # Whether to ask preprocessor keyword '#include|#define|if|#elif|#ifdef|#ifndef|#endif' thus # 0: indifferent, 1: required # default: 1 lint_preprocess_thus=  # rule.14 # For preprocessor keyword '#include|#define|if|#elif|#ifdef|#ifndef|#endif' allow space after '#' # -1: forbidden, 0: indifferent # default: -1 lint_preprocess_space=  # rule.15 # Code Style selection # 1. K&amp;R # if () { #     a = b; # } # 2. Allman # if () # { #     a = b; # } # 3. Whitesmiths # if () #     { #     a = b; #     } # 4. GNU # if () #     { #         a = b; #     } # default: 1 lint_code_style=  # rule.16 # The function name is lowercase +_ # 0: indifferent, 1: required # default: 1 lint_func_naming=  # rule.17 # Macro naming rules # 0: indifferent, 1: uppercase +_, 2: uppercase + number +_ # default: 1 lint_macro_naming=  # rule.18 # Enum naming rules # 0: indifferent, 1: uppercase +_, 2: uppercase + number +_ # default: 1 lint_enum_naming=  # rule.19 # Whether devil numbers are allowed # -1: forbidden, 0: indifferent # default: -1 lint_devil_numbers=  # rule.20 # Comment style selection # 0: indifferent, 1: //, 2: /**/ # default: 0 lint_comment_style=  # rule.21 # Whether to disallow more than one consecutive blank line #  0: indifferent, 1: forbidden # default: 1 lint_blank_line=  # rule.22 # Whether the type conversion using C-style cast (static_cast | const_cast | reinterpret_cast) #  0: indifferent, 1: required # default: 0 lint_cstyle_cast=  # rule.23 # Whether to disallow multiple code statements on the same line # eg: "a = 1; b = 2;", "if (1) { c = 3; }" #  0: indifferent, 1: forbidden # default: 1 lint_multiple_code=  # rule.24 # Whether comments are required after '#endif' #  0: indifferent, 1: required # default: 0 lint_comment_endif=  </code></pre> <ol start="3"> <li>配置文件的与Lint存放在同一级目录，一般是在项目顶级目录 </li> </ol> <ul> <li>在Lint时会读取配置文件，其中的选项参数决定检查的规则，如果没有找见配置文件则Lint使用默认配置进行规则检查</li> </ul> <h2 id="进展说明">进展说明</h2> <ol> <li>文件名命名规则     <em><strong><code>[DONE]</code></strong></em> </li> <li>文件首是否要求书写版权    <em><strong><code>[DONE]</code></strong></em> </li> <li>文件尾是否要求新行    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否允许使用TAB    <em><strong><code>[DONE]</code></strong></em> </li> <li>代码行长度要求    <em><strong><code>[DONE]</code></strong></em> </li> <li>函数体行数要求    <em><strong><code>[DONE]</code></strong></em> </li> <li>代码缩进空格数    <em><strong><code>[DONE]</code></strong></em> </li> <li>行尾多余空格是否允许    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否允许一行出现多条指令    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否要求代码块(if|else|for|while)使用花括号  [1]    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否要求关键字前后留1个空格    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否要求运算符前后留1个空格(实现了部分)    <em><strong><code>[TODO]</code></strong></em> </li> <li>是否要求预处理关键字'#include|#&gt;define|if|#elif|#if&gt;def|#ifn&gt;def|#endif'顶格    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否允许预处理关键字'#include|#&gt;define|if|#elif|#if&gt;def|#ifn&gt;def|#endif'井号后有空格    <em><strong><code>[DONE]</code></strong></em> </li> <li>代码风格选择(实现了'K&amp;R', 'Allman')   <em><strong><code>[TODO]</code></strong></em> </li> <li>函数名命名规则为小写+_    <em><strong><code>[DONE]</code></strong></em> </li> <li>宏命名规则    <em><strong><code>[DONE]</code></strong></em> </li> <li>枚举命名规则  [1]    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否允许出现魔鬼数字    <em><strong><code>[DONE]</code></strong></em> </li> <li>注释风格选择    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否禁止连续空行超过1行    <em><strong><code>[DONE]</code></strong></em> </li> <li>类型转换是否使用C-style cast(static_cast|const_cast|reinterpret_cast)    <em><strong><code>[DONE]</code></strong></em> </li> <li>是否禁止多条代码语句在同一行    <em><strong><code>[DONE]</code></strong></em> </li> <li>'#endif'后是否要求带注释    <em><strong><code>[DONE]</code></strong></em> </li> </ol> <h2 id="其他">其他</h2> <ul> <li>使用pyinstaller工具将python文件打包成可执行文件，优势：只要windows环境就能运行 <p><strong>[注]</strong>：python2.7不能直接安装，需要特定版本: <code>pip2 install pyinstaller==3.2.1</code> </li> <li>大家在使用过程中，发现任何bug及改进点欢迎提<code>issue</code>反馈给我</li> </ul> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1144.htm">python初始化方法</a></p>
                                                        <p>下一个：<a href="/html/category/article-1146.htm">查看一个VUE项目的版本</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1289.htm" title="关于MySQL支持的所有字符集的查询是什么？">关于MySQL支持的所有字符集的查询是什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-1278.htm" title="ASP.NET WebAPI导出CSV_实用技巧">ASP.NET WebAPI导出CSV_实用技巧</a></li>
                        <li class="py-2"><a href="/html/category/article-1287.htm" title="Spingboot Resttemplate连接池配置">Spingboot Resttemplate连接池配置</a></li>
                        <li class="py-2"><a href="/html/category/article-1314.htm" title="vue&#8211;vuex 中 Modules 详解">vue&#8211;vuex 中 Modules 详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1304.htm" title="网络协议之:socket协议详解之Socket和Stream Socket">网络协议之:socket协议详解之Socket和Stream Socket</a></li>
                        <li class="py-2"><a href="/html/category/article-1283.htm" title="Python 的math 模块">Python 的math 模块</a></li>
                        <li class="py-2"><a href="/html/category/article-1315.htm" title="关于对称算法中数据的填充模式">关于对称算法中数据的填充模式</a></li>
                        <li class="py-2"><a href="/html/category/article-1268.htm" title="c++堆内存默认大小_线上内存暴涨问题定位和解决">c++堆内存默认大小_线上内存暴涨问题定位和解决</a></li>
                        <li class="py-2"><a href="/html/category/article-1307.htm" title="在JavaScript中实现优先级排序">在JavaScript中实现优先级排序</a></li>
                        <li class="py-2"><a href="/html/category/article-1272.htm" title="FreeRTOS实时操作系统之可视化追踪调试_操作系统">FreeRTOS实时操作系统之可视化追踪调试_操作系统</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>