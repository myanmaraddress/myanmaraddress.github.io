<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1087.htm" />
    <title>企业实战之阿里druid统一监控方案，你了解吗？ - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>企业实战之阿里druid统一监控方案，你了解吗？</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="htmledit_views"> <h2></h2> <p>前言</p> <p>相信大家对阿里的druid数据库连接池很熟悉了，在国内使用数据库操作的时候，绝大部分都会引用druid。当然今天不是介绍怎么使用druid，而是分析一下druid的监控。我们先来回顾一下druid是什么吧？</p> <h2></h2> <p>简介</p> <p>1、Druid是阿里开源的一个JDBC应用组件， 其包括三部分：</p> <ul> <li> <p>DruidDriver: 代理Driver，能够提供基于Filter－Chain模式的插件体系。</p> </li> <li> <p>DruidDataSource: 高效可管理的数据库连接池。</p> </li> <li> <p>SQLParser: 实用的SQL语法分析</p> </li> </ul> <p>2、通过Druid连接池中间件， 我们可以实现：</p> <ul> <li> <p>可以监控数据库访问性能，Druid内置提供了一个功能强大的StatFilter插件，能够详细统计SQL的执行性能，这对于线上分析数据库访问性能有帮助。</p> </li> <li> <p>替换传统的DBCP和C3P0连接池中间件。Druid提供了一个高效、功能强大、可扩展性好的数据库连接池。</p> </li> <li> <p>数据库密码加密。直接把数据库密码写在配置文件中，容易导致安全问题。DruidDruiver和DruidDataSource都支持PasswordCallback。</p> </li> <li> <p>SQL执行日志，Druid提供了不同的LogFilter，能够支持Common-Logging、Log4j和JdkLog，你可以按需要选择相应的LogFilter，监控你应用的数据库访问情况。</p> </li> <li> <p>扩展JDBC，如果你要对JDBC层有编程的需求，可以通过Druid提供的Filter-Chain机制，很方便编写JDBC层的扩展插件</p> </li> </ul> <h2></h2> <p>监控</p> <p>druid最大的特色就是有相应的监控，可以帮忙我们查看到执行SQL日志，慢SQL语句，执行SQL的性能以及防止SQL注入等功能。</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/635139b100adf0b7a1b5ecb5da086d20.jpg"></p> <p>&nbsp; </p> <h2></h2> <p>数据源</p> <p>数据源菜单显示数据库连接池的基本信息，如连接地址、连接类型、最大连接数、最小连接数、初始连接等信息。</p> <p>可通过逻辑连接打开次数、逻辑连接关闭次数来判断系统中是否存在有连接未关闭的情况(正常情况下打开次数和关闭次数应该一致)</p> <h2></h2> <p>SQL监控</p> <p>SQL监控显示系统已执行过的每条SQL语句的执行情况。通过执行数、执行时间、最慢时间、事务中、错误数、最大并发、执行时间分布等统计维度来展现。</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/86c46d8095a41eda6b49f31f62374ccc.jpg"></p> <p>&nbsp; </p> <pre></pre> <pre></pre> <p>1、执行数：本条sql语句已执行的次数 2、执行时间：本条sql语句累计执行时间(单位：毫秒) 3、最慢：本条sql语句执行最慢一次的耗时(单位：毫秒) 4、执行时间分布【- - - - - - - -】：这8个 – 分别代表8个耗时区间的次数，从左至右依次是： 0-1毫秒次数、1-10毫秒次数、10-100毫秒次数、100-1000毫秒次数、1-10秒次数、10-100秒次数、100-1000秒次数、大于1000秒次数。</p> <h2></h2> <p>WEB应用</p> <p>主要统计本应用的并发、请求、事务提交、事务回滚等信息，另外统计了本应用在各操作系统上、各浏览器上的访问次数。</p> <h2></h2> <p>SQL防火墙</p> <p>分防御统计、表访问统计、函数调用统计、SQL防御统计-白名单、SQL防御统计-黑名单这几项。其中若是涉嫌SQL注入的SQL语句将被拦截，出现在SQL防御统计-黑名单中</p> <h2></h2> <p>请求URL监控</p> <p>统计了应用中各url的访问次数、请求时间、并发数等信息</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/1e2ff980ec746ceab3c9ea05d2863a00.jpg"></p> <p>编辑切换为居中</p> <p>添加图片注释，不超过 140 字（可选）</p> <h2></h2> <p>Session监控</p> <p>显示应用中session的请求时间、请求次数、最大并发等数据</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/220e6c7b719e719c960a7bfc840b786b.jpg"></p> <p>编辑切换为居中</p> <p>添加图片注释，不超过 140 字（可选）</p> <h2></h2> <p>问题一</p> <p>我们看到了druid监控功能的强大，也发现了一个重大的问题，如图</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/01f681a57d4b89d69d22f782094eb5c5.jpg"></p> <p>编辑切换为居中</p> <p>添加图片注释，不超过 140 字（可选）</p> <p>druid控制台是针对每个实例的，不同的实例就有不同的druid控制台；但在生产环境中，会有多个实例，那监控平台会存在多个，那我们运维/开发人员查看的时候就麻烦了，需要打开多个控制台。不能整体查看监控数据。</p> <p>那怎么解决呢？</p> <h2></h2> <p>源码分析</p> <p>我们先来看一下druid的监控功能是怎么实现的？</p> <p>我们看一下DruidDataSource核心类，里面有一个LogStatsThread线程</p> <pre></pre> <pre></pre> <p>private LogStatsThread logStatsThread;</p> <p>在DruidDataSource初始化init方法中，调用了createAndLogThread方法，再看一下createAndLogThread这个方法，在timeBetweenLogStatsMillis属性大于0的时候就实例化LogStatsThread线程。</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/1916bbff4cd53d281278623332e43c88.jpg"></p> <p>编辑切换为居中</p> <p>添加图片注释，不超过 140 字（可选）</p> <p>再来看一下LogStatsThread线程做了什么</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/f3b0187bdaca548351e31a84cd33fa2a.jpg"></p> <p>编辑切换为居中</p> <p>添加图片注释，不超过 140 字（可选）</p> <p>LogStatsThread线程一直循环调用logStats方法，每次sleep睡眠timeBetweenLogStatsMillis毫秒。那我们就知道这个参数的本质就是每隔多少毫秒去执行logStats方法。</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/c50c3f1a9942cdeab9d13bc60ebd4a24.jpg"></p> <p>编辑切换为居中</p> <p>添加图片注释，不超过 140 字（可选）</p> <p>上面的代码表示，数据监控是存在DruidDataSourceStatValue实例里面，然后statLogger对象进行记录。到底存放到哪里，就由statLogger决定。</p> <p>druid默认的DruidDataSourceStatLogger接口实现 DruidDataSourceStatLoggerImpl，</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/29a1b0abd0efb1c78f433246c65a3eba.jpg"></p> <p>&nbsp; </p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/a8e6ec77a9c8e97b2a4281df41a9f947.jpg"></p> <p>&nbsp; </p> <p>可以看到Druid是以Json形式进行日志输出的，具体的数据处理在log(DruidDataSourceStatValue)方法中进行，这个方法也是后续我们需要用到的。</p> <h2></h2> <p>方案一</p> <p>Druid默认的持久化方式是进行文件记录，如果我们想要自定义监控记录的持久化方式则需要自定义StatLogger，参考以上StatLogger的默认实现，我们可以定义一个简单的StatLogger，如下所示：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/b8878fbd89866c12cb2843595d1295a7.jpg"></p> <p>）</p> <p>在这里，我们重写了log(DruidDataSourceStatValue)方法，一个简单的StatLogger就定制完成了，下面需要在dataSource中配置这个statLogger，我们在配置文件中druid节点下加上如下配置：</p> <pre></pre> <pre></pre> <p>time-between-log-stats-millis: 60000 stat-logger:</p> <p>配置过程中发现 stat-logger 对应的是一个 DruidDataSourceStatLoggerAdapter对象，而yml配置文件中仅支持基本数据类型和Map、List等类型，查看源码可以发现，在DruidAbstractDataSource类中有如下定义：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/bbc75a0748e3c31ee99a4a61616631c8.jpg"></p> <p>&nbsp; </p> <p>支持直接设置statLogger对象和通过类名设置两种方式，回到配置文件中发现没有类名的这个配置项，如下：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/35173b3f8307f523aaa7217ca737be04.jpg"></p> <p>&nbsp; </p> <p>既然通过配置文件不能够直接配置，那么我们就以配置类的方式来配置Druid数据源，新建一个Druid的配置类，如下所示：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/9faff5b66a6e0496279cefb185efe673.jpg"></p> <p>&nbsp; </p> <p>其中@ConfigurationProperties表示配置的属性，这里会将配置文件中以spring.datasource.druid为前缀的值映射到DataSource对象的同名属性上，在这个方法中，我们将DatSource的statLogger设置为我们自定义的StatLogger。</p> <p>这样配置之后，我们就可以看到每隔10秒会做监控数据的持久化了。</p> <h2></h2> <p>问题二</p> <p>我们再仔细看一下上面的方案，如图</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/fd47ee747bbefb8ad41d9bf2cbe76b0c.jpg"></p> <p>&nbsp; </p> <p>上面的方案会有一些问题</p> <blockquote> <p>1、如果持久化数据库挂了，就会导致监控数据会丢失 2、在很多实例的时候，都会给数据库进行提交监控数据；会产生高并发问题 3、druid组件和监控持久化有一定耦合关系了。监控持久化业务异常就有可能会影响到druid</p> </blockquote> <p>怎么解决呢？我们再回来看看druid之前的监控数据方案，druid默认把监控数据记录下日志文件中，这个方案其实已经把监控数据持久化到磁盘上面了，只是日志文件是保存在每个服务实例上面的。那是不是我们只要把这些日志都收集起来，保存到某处，这样是不是也就可以了？</p> <h2></h2> <p>方案二</p> <p>我们来调整一下方案</p> <blockquote> <p>这个方案涉及到大数据方面的知识点了，其实也不是太难，大家只要理解架构思路就行了</p> </blockquote> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/6c1d512fbb6f1258e4f48fbcfbe47167.jpg"></p> <p>&nbsp; </p> <p>如上核心思想就是采集日志文件，然后把日志数据发送到消息中间件kafka（这样就起到了削峰作用）；再独立开发个持久化服务订阅kafka消息，做持久化业务。</p> <blockquote> <p>这个方案就解决了之前方案一的问题，又能抗高并发，又能解耦合</p> </blockquote> <p>方案中有个Flume组件，他的作用就是用来采集文件，然后同步到各个地方，常用到的就是同步到kafka中。</p> <p>现在大多数Druid配置都是log4j作为logger，但是logback作为新一代的日志框架，我们有理由使用logback配置Druid Filter，之前的配置是：</p> <pre></pre> <pre></pre> <p>dataSourceA.filters=stat,wall,log4j</p> <p>Druid支持配置多种Filter，配置信息保存在druid-xxx.jar! /META-INF/druid-filter.properties下面，具体如下：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/c24aece4d251fe362c34edbc8bcccf88.jpg"></p> <p>&nbsp; </p> <p>我们知道，logback是slf4j的实现类，按照规定格式，改成下面就可以了：</p> <pre></pre> <pre></pre> <p>dataSourceA.filters=stat,wall,slf4j</p> <p>具体logback的配置，这里就不介绍了。</p> <h2></h2> <p>总结</p> <p>本文介绍了druid的监控数据的统一化管理，可以方便我们开发运维进行监控，虽然我们已经把监控数据都进行了采集，那怎么在界面上面显示，这个就需要报表可视化的方案了，有时间老顾会给大家介绍，谢谢！！！</p> </p></div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1086.htm">spark-sql使用hive的自定函数配置</a></p>
                                                        <p>下一个：<a href="/html/category/article-1088.htm">MySQL NOW()和SYSDATE()有什么区别？</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1270.htm" title="C# 实现登录并跳转界面">C# 实现登录并跳转界面</a></li>
                        <li class="py-2"><a href="/html/category/article-1291.htm" title="Springcloud通过maven打包包含公共common模块的项目">Springcloud通过maven打包包含公共common模块的项目</a></li>
                        <li class="py-2"><a href="/html/category/article-1263.htm" title="chrome浏览器隐藏滚动条">chrome浏览器隐藏滚动条</a></li>
                        <li class="py-2"><a href="/html/category/article-1318.htm" title="vue项目中,如何实现excel的导入导出excel导入功能-组件封装">vue项目中,如何实现excel的导入导出excel导入功能-组件封装</a></li>
                        <li class="py-2"><a href="/html/category/article-1285.htm" title="C语言栈与队列面试题详解_C 语言">C语言栈与队列面试题详解_C 语言</a></li>
                        <li class="py-2"><a href="/html/category/article-1295.htm" title="带你快速认识NamenodeHA和Yarn HA,为搭建HadoopHA集群打下基础!">带你快速认识NamenodeHA和Yarn HA,为搭建HadoopHA集群打下基础!</a></li>
                        <li class="py-2"><a href="/html/category/article-1315.htm" title="关于对称算法中数据的填充模式">关于对称算法中数据的填充模式</a></li>
                        <li class="py-2"><a href="/html/category/article-1274.htm" title="分享MongoDB修改oplog大小的4种方法_MongoDB_">分享MongoDB修改oplog大小的4种方法_MongoDB_</a></li>
                        <li class="py-2"><a href="/html/category/article-1269.htm" title="ruby 版本管理RVM （ruby version manager）">ruby 版本管理RVM （ruby version manager）</a></li>
                        <li class="py-2"><a href="/html/category/article-1262.htm" title="Linux里面磁盘文件咋删除呀,清理Linux磁盘空间的方法有哪些？">Linux里面磁盘文件咋删除呀,清理Linux磁盘空间的方法有哪些？</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>