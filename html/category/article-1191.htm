<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1191.htm" />
    <title>c# 一些警告的处理方法 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>c# 一些警告的处理方法</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<p>在使用.Net 6开发程序时，发现多了很多新的警告类型。这里总结一下处理方法。</p> <h2 id="cs8618-在退出构造函数时不可为-null-的-属性name必须包含非-null-值">CS8618 在退出构造函数时，不可为 null 的 属性“Name”必须包含非 null 值</h2> <p>经常遇到的有CS8618警告：如果定义属性可能为空时，在编译时会报这个警告，比如下面的代码：</p> <pre><code>    public class Play     {         public string Name { get; set; }          public Play()         {          }</code></pre> <p>警告如下：<br /> CS8618	在退出构造函数时，不可为 null 的 属性“Name”必须包含非 null 值。请考虑将 属性 声明为可以为 null。<br /> 处理办法是将属性声明为可以为空：</p> <pre><code>    public class Play     {         public string? Name { get; set; }          public Play()         {          }     }</code></pre> <p>或者，给属性设置初始值：</p> <pre><code>    public class Play     {         public string Name { get; set; } = "";          public Play()         {          }     }</code></pre> <p>但遇到下面的情况，这两种办法就不能用了：</p> <pre><code> public class GameSocialDbContext : DbContext { 　　public DbSet&lt;GameMessage&gt; GameMessages { get; set; } 　　public DbSet&lt;Player&gt; Players { get; set; } 　　public GameSocialDbContext(DbContextOptions&lt;GameSocialDbContext&gt; options) : base(options) 　　{ 　　}  }</code></pre> <p>这种情况下，可以将属性设置default!来避免警告：</p> <pre><code>        public DbSet&lt;Game&gt; Games { get; set; } = default!;         public DbSet&lt;Player&gt; Players { get; set; } = default!;</code></pre> <h2 id="cs1998-此异步方法缺少await运算符">CS1998 此异步方法缺少await运算符</h2> <p>这种情况通常出现在重载或者实现某个异步方法时，没有可调用的异步函数。比如下面的方法：</p> <pre><code>        public async Task RemoveAsync(Player player)         {             Players.Remove(player);         }</code></pre> <p>这种情况下，可以在退出前增加 await Task.CompletedTask;来避免警告。<br /> 如果需要返回值，比如：</p> <pre><code>        public async Task&lt;List&lt;Player&gt;&gt; GetAllAsync()         {             return colTemp.AsQueryable&lt;Player&gt;().ToList();         }</code></pre> <p>这时，可以使用await Task.FromResult()作为返回值：</p> <pre><code>        public async Task&lt;List&lt;Player&gt;&gt; GetAllAsync()         {             return await Task.FromResult(colTemp.AsQueryable&lt;Player&gt;().ToList());         }</code></pre> <h2 id="cs8602-解引用可能出现空引用">CS8602 解引用可能出现空引用</h2> <p>如果采用as进行转换，可能出现这个警告：</p> <pre><code> await (handler as IEventHandler).HandleEvent(data);</code></pre> <p>可以改为强制转换：</p> <pre><code> await ((IEventHandler)handler).HandleEvent(data);</code></pre> <p>也可以使用!操作符：</p> <pre><code> await (handler as IEventHandler)!.HandleEvent(data);</code></pre> <p>还可以在调用前判断是否为空，如果为空，抛出异常。</p> <h2 id="cs8603-可能返回null引用">CS8603 可能返回null引用</h2> <p>这种警告多出现在过滤时，比如：</p> <pre><code>        public async Task&lt;Player&gt; GetPlayerByNameAsync(string name)         {             return await gameDbContext.Players                 .Include(p =&gt; p.SentFriendRequests)                 .Include(p =&gt; p.ReceievedFriendRequests).FirstOrDefaultAsync(p =&gt; p.UserName == name);         }</code></pre> <p>由于FirstOrDefault可能返回空值，所以会出现警告。可以改为使用First：</p> <pre><code>        public async Task&lt;Player&gt; GetPlayerByNameAsync(string name)         {             return await gameDbContext.Players                 .Include(p =&gt; p.SentFriendRequests)                 .Include(p =&gt; p.ReceievedFriendRequests).FirstAsync(p =&gt; p.UserName == name);         }</code></pre> <p>或者允许返回值为空：</p> <pre><code>        public async Task&lt;Player?&gt; GetPlayerByNameAsync(string name)         {             return await gameDbContext.Players                 .Include(p =&gt; p.SentFriendRequests)                 .Include(p =&gt; p.ReceievedFriendRequests).FirstOrDefaultAsync(p =&gt; p.UserName == name);         }</code></pre> <p>最后需要说明的是，警告是为了提示程序可能的潜在问题，消除警告时，需要结合具体情况确定使用哪种方式，不要为了去掉警告忽略潜在的问题。</p> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1190.htm">Python使用pandas读取hdfs文件</a></p>
                                                        <p>下一个：<a href="/html/category/article-1192.htm">AJAX原理以及axios、fetch区别实例详解_AJAX相关</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1300.htm" title="Git基础Git对象的总结">Git基础Git对象的总结</a></li>
                        <li class="py-2"><a href="/html/category/article-1961.htm" title="python自动化测试工具selenium使用指南">python自动化测试工具selenium使用指南</a></li>
                        <li class="py-2"><a href="/html/category/article-1303.htm" title="通过make生成执行文件的过程详解_在线工具">通过make生成执行文件的过程详解_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-2832.htm" title="pytorch 自动构建任意层的深度神经网络(DNN)">pytorch 自动构建任意层的深度神经网络(DNN)</a></li>
                        <li class="py-2"><a href="/html/category/article-1339.htm" title="分享MySQL生产库内存异常增高的排查过程_Mysql_">分享MySQL生产库内存异常增高的排查过程_Mysql_</a></li>
                        <li class="py-2"><a href="/html/category/article-1948.htm" title="前端之vue的vuex插件(多组件共享数据)">前端之vue的vuex插件(多组件共享数据)</a></li>
                        <li class="py-2"><a href="/html/category/article-1320.htm" title="46.java编程思想——传递和返回对象 只读类">46.java编程思想——传递和返回对象 只读类</a></li>
                        <li class="py-2"><a href="/html/category/article-2247.htm" title="Vue刷新当前页面几种方式">Vue刷新当前页面几种方式</a></li>
                        <li class="py-2"><a href="/html/category/article-1317.htm" title="JSON  传输数据出现415错误 Content type &#8216;application/xml;charset=UTF-8&#8217; not supported">JSON  传输数据出现415错误 Content type &#8216;application/xml;charset=UTF-8&#8217; not supported</a></li>
                        <li class="py-2"><a href="/html/category/article-1947.htm" title="Vant组件样式没有生效">Vant组件样式没有生效</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>