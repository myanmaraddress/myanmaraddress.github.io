<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1082.htm" />
    <title>Linux 下清空或删除大文件/大量文件的几种方法 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>Linux 下清空或删除大文件/大量文件的几种方法</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="htmledit_views"> <pre style="margin:0in;line-height:20pt;background-color:rgb(255,255,255);"><strong><span style="font-family:'Microsoft YaHei';font-size:16px;">快速删除大文件</span></strong></pre> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">1. 通过重定向到 Null 来清空文件内容清空或者让一个文件成为空白的最简单方式，是像下面那样，通过 shell 重定向 null （不存在的事物）到该文件：</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># &gt; access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220609/bd65423ac9afa87aa74c8b1b359a226f.jpg" alt="Linux 下清空或删除大文件/大量文件的几种方法"></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">2.<span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">使用 : 符号<br /></span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">使用 : 符号，它是 shell 的一个内置命令，等同于 true 命令，它可被用来作为一个 no-op（即不进行任何操作）。另一种清空文件的方法是将 :&nbsp;或者&nbsp;true 内置命令的输出重定向到文件中，具体如下：</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># : &gt; access.log # true &gt; access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"><img decoding="async" src="http://img.555519.xyz/uploads3/20220609/39ff1167d424892a012ac739064afd64.jpg" alt="Linux 下清空或删除大文件/大量文件的几种方法"></span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">3.使用 cat/cp/dd 实用工具及 /dev/null 设备来清空文件<br /></span></span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">在 Linux 中， null 设备基本上被用来丢弃某个进程不再需要的输出流，或者作为某个输入流的空白文件，这些通常可以利用重定向机制来达到，所以 /dev/null 设备文件是一个特殊的文件，它将清空送到它这里来的所有输入，而它的输出则可被视为一个空文件。另外，你可以通过使用 cat命令 显示 /dev/null 的内容然后重定向输出到某个文件，以此来达到清空该文件的目的。</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># cat /dev/null &gt; access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">下面，我们将使用 cp命令 复制 /dev/null 的内容到某个文件来达到清空该文件的目的，具体如下所示：</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># cp /dev/null access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">而下面的命令中， if 代表输入文件，of 代表输出文件。</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># dd if=/dev/null of=access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220609/70ea792a75a7118195da7c5cbbffaa02.jpg" alt="Linux 下清空或删除大文件/大量文件的几种方法"></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">4. 使用 echo 命令清空文件<br /></span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">在这里，你可以使用 echo命令 将空字符串的内容重定向到文件中，具体如下：</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># echo "" &gt; access.log 或者 # echo &gt; access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">注意：你应该记住空字符串并不等同于 null 。字符串表明它是一个具体的事物，只不过它的内容可能是空的，但 null 则意味着某个事物并不存在。基于这个原因，当你将 echo命令 的输出作为输入重定向到文件后，使用cat命令来查看该文件的内容时，你将看到一个空白行（即一个空字符串）。要将 null 做为输出输入到文件中，你应该使用 -n 选项，这个选项将告诉 echo 不再像上面的那个命令那样输出结尾的那个新行。</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># echo -n "" &gt; access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"><img decoding="async" src="http://img.555519.xyz/uploads3/20220609/8f3e0768b8a2bd485310d82d020d2b1c.jpg" alt="Linux 下清空或删除大文件/大量文件的几种方法"></span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">5. 使用 truncate 命令来清空文件内容<br /></span></span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">truncate 可被用来将一个文件缩小或者扩展到某个给定的大小。你可以利用它和 -s 参数来特别指定文件的大小。要清空文件的内容，则在下面的命令中将文件的大小设定为 0:</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># truncate -s 0 access.log</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">我要介绍的就是这么多了。在本文中，我们介绍了几种通过使用一些简单的命令行工具和 shell 重定向机制来清除或清空文件内容的方法。</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><img decoding="async" src="http://img.555519.xyz/uploads3/20220609/0918191160328d96ce7b877c890c6371.jpg" alt="Linux 下清空或删除大文件/大量文件的几种方法"></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">6.使用rsync命令<br /></span></span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">假如你有一些特别大的文件要删除，比如nohup.out这样的实时更新的文件，动辄都是几十个G上百G的，也可以用rsync来清空大文件，而且效率比较高。</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">1）创建空文件</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># touch/data/blank.txt</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">2）用rsync清空文件</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># rsync -a --delete-before --progress --stats /root/blank.txt /root/nohup.out</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><strong>快速删除大量文件</strong></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">假如你要在linux下删除大量文件，比如100万、1000万，像/var/spool/clientmqueue/的mail邮件，/usr/local/nginx/proxy_temp的nginx缓存等，那么rm -rf *可能就不好使了。 rsync 可以用来清空目录或文件，如下：</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">1）先建立一个空目录# mkdir/data/blank</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">2）用rsync删除目标目录</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"># rsync --delete-before -d /data/blank/ /var/spool/clientmqueue/</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">这样目标目录很快就被清空了</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;">注：其中--delete-before 接收者在传输之前进行删除操作</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><strong><span lang="zh-cn">为什么rsync能够快速删除</span><span lang="zh-cn">大文件？</span></strong></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span lang="en-us">1</span><span lang="zh-cn">）</span><span lang="zh-cn">rm命令大量调用了lstat64和unlink，可以推测删除每个文件前都从文件系统中做过一次lstat操作。过程：正式删除工作的第一阶段，需要通过getdirentries64调用，分批读取目录（每次大约为4K），在内存中建立rm的文件列表；第二阶段，lstat64确定所有文件的状态；第三阶段，通过unlink执行实际删除。这三个阶段都有比较多的系统调用和文件系统操作。</span></span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span lang="en-us">2</span><span lang="zh-cn">）</span><span lang="zh-cn">rsync所做的系统调用很少</span><span lang="zh-cn">：</span><span lang="zh-cn">没有针对单个文件做lstat和unlink操作。命令执行前期，rsync开启了一片共享内存，通过mmap方式加载目录信息。只做目录同步，不需要针对单个文件做unlink。</span>另外，在其他人的评测里，rm的上下文切换比较多，会造成System CPU占用较多——对于文件系统的操作，简单增加并发数并不总能提升操作速度。&nbsp;总结：频繁做减法不如直接从头来过把文件系统的目录与书籍的目录做类比，rm删除内容时，将目录的每一个条目逐个删除(unlink)，需要循环重复操作很多次；rsync删除内容时，建立好新的空目录，替换掉老目录，基本没开销。</span></p> <p><span style="font-family:'Microsoft YaHei';font-size:16px;"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);">参考：https://blog.csdn.net/liuxiao723846/article/details/51626305</span></span></span></p> <p><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"><span style="color:rgb(51,51,51);background-color:rgb(255,255,255);"></span></span></div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1081.htm">SpringBoot提供接口实现Excel导入数据并存储到数据库中</a></p>
                                                        <p>下一个：<a href="/html/category/article-1083.htm">Python数据结构-列表</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1315.htm" title="关于对称算法中数据的填充模式">关于对称算法中数据的填充模式</a></li>
                        <li class="py-2"><a href="/html/category/article-1285.htm" title="C语言栈与队列面试题详解_C 语言">C语言栈与队列面试题详解_C 语言</a></li>
                        <li class="py-2"><a href="/html/category/article-1309.htm" title="sqlserver 中使用sqlcmd 执行几百M的.sql文件">sqlserver 中使用sqlcmd 执行几百M的.sql文件</a></li>
                        <li class="py-2"><a href="/html/category/article-1272.htm" title="FreeRTOS实时操作系统之可视化追踪调试_操作系统">FreeRTOS实时操作系统之可视化追踪调试_操作系统</a></li>
                        <li class="py-2"><a href="/html/category/article-1267.htm" title="docker-compose 配置kafka_Docker Compose 引用环境变量">docker-compose 配置kafka_Docker Compose 引用环境变量</a></li>
                        <li class="py-2"><a href="/html/category/article-1308.htm" title="HTML 5验证有用吗">HTML 5验证有用吗</a></li>
                        <li class="py-2"><a href="/html/category/article-1287.htm" title="Spingboot Resttemplate连接池配置">Spingboot Resttemplate连接池配置</a></li>
                        <li class="py-2"><a href="/html/category/article-1279.htm" title="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段">Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段</a></li>
                        <li class="py-2"><a href="/html/category/article-1290.htm" title="Jmeter监控平台搭建：JMeter+InfluxDB+Grafana">Jmeter监控平台搭建：JMeter+InfluxDB+Grafana</a></li>
                        <li class="py-2"><a href="/html/category/article-1282.htm" title="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI">Azure DevOps通过Azure Devops部署一个.NET Core WebAPI</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">28</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>