<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1069.htm" />
    <title>00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h1><a id="transientstatic_0" rel="nofollow"></a>不序列的字段：transient和static目录</h1> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#transientstatic_0" rel="nofollow">不序列的字段：transient和static目录</a></li> <li><a href="#_5" rel="nofollow">前言</a></li> <li><a href="#_8" rel="nofollow">一、是什么？</a></li> <li><a href="#_14" rel="nofollow">二、使用步骤</a></li> <li><a href="#_32" rel="nofollow">总结</a></li> </ul> </div> <h1><a id="_5" rel="nofollow"></a>前言</h1> <p>接上一篇</p> <h1><a id="_8" rel="nofollow"></a>一、是什么？</h1> <p>如果我们有一个需求：要求对象中有些属性不需要序列化<br /> 而且实际开发中确实也有这种情况<br /> 不是所有的对象属性都需要序列化的</p> <h1><a id="_14" rel="nofollow"></a>二、使用步骤</h1> <p>假如我们有一个商品类<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/35a1e21ab9d9066d946b2597b65e61a1.jpg" alt="00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰"><br /> 解决办法：<br /> 方式1： 如果某个属性不需要序列化，可以在属性的前面加一个关键字：transient<br /> 方式2：如果某个属性是static，那么也不会序列化。因为静态的变量不属于某个对象，而是整个类的，所以不需要随着对象的序列化而序列化。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/977d0d1667d9aa379b4eb1ef343ee302.jpg" alt="00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰"><br /> 然后再把系列化的代码写一遍测试一下<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/bf40f9d2e20b932256acc96fcf042a18.jpg" alt="00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰"><br /> 效果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/d95376e83d0e90d4279f9a3e0ba7b6f6.jpg" alt="00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰"><br /> 由此可见，sale字段确实没有被序列化</p> <p>我们再看第二种方式，用静态修饰属性<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/b91ee1e2b0aa95d2e4c6b7af612ddcc7.jpg" alt="00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220821/a29495347ec1e2c0278239cbb36ce31b.jpg" alt="00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰"></p> <h1><a id="_32" rel="nofollow"></a>总结</h1> <p>如果在序列化的过程中有些属性不需要序列化的解决办法<br /> 方式1： 如果某个属性不需要序列化，可以在属性的前面加一个关键字：transient<br /> 方式2：如果某个属性是static，那么也不会序列化。因为静态的变量不属于某个对象，而是整个类的，所以不需要随着对象的序列化而序列化。</p> </div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1068.htm">解决swagger文档接口404的问题</a></p>
                                                        <p>下一个：<a href="/html/category/article-1070.htm">vue实现下拉效果</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2831.htm" title="kerberos kafka 问题解决">kerberos kafka 问题解决</a></li>
                        <li class="py-2"><a href="/html/category/article-1920.htm" title="我们如何在Java中实现自定义HashSet">我们如何在Java中实现自定义HashSet</a></li>
                        <li class="py-2"><a href="/html/category/article-1304.htm" title="网络协议之:socket协议详解之Socket和Stream Socket">网络协议之:socket协议详解之Socket和Stream Socket</a></li>
                        <li class="py-2"><a href="/html/category/article-2832.htm" title="pytorch 自动构建任意层的深度神经网络(DNN)">pytorch 自动构建任意层的深度神经网络(DNN)</a></li>
                        <li class="py-2"><a href="/html/category/article-2247.htm" title="Vue刷新当前页面几种方式">Vue刷新当前页面几种方式</a></li>
                        <li class="py-2"><a href="/html/category/article-1293.htm" title="基于Spring接口，集成Caffeine+Redis两级缓存">基于Spring接口，集成Caffeine+Redis两级缓存</a></li>
                        <li class="py-2"><a href="/html/category/article-1298.htm" title="利用Redis实现防止接口重复提交功能">利用Redis实现防止接口重复提交功能</a></li>
                        <li class="py-2"><a href="/html/category/article-1637.htm" title="Java基础之浅谈异常与了解断言">Java基础之浅谈异常与了解断言</a></li>
                        <li class="py-2"><a href="/html/category/article-1292.htm" title="Flutter实现心动的动画特效_Android">Flutter实现心动的动画特效_Android</a></li>
                        <li class="py-2"><a href="/html/category/article-1294.htm" title="OpenFeign、Feign以及Ribbon关系介绍">OpenFeign、Feign以及Ribbon关系介绍</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>