<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1108.htm" />
    <title>k8s入门之Deployment - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>k8s入门之Deployment</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<p>Deployment控制器通常用来部署无状态的应用，这样可以在任意的节点上扩容或者删除，而不用考虑数据的问题，它可以管理pod对象。</p> <p><strong>一、多副本</strong></p> <p><strong>1.使用命令行方式创建Deployment</strong></p> <p>在dev名称空间下创建3个副本的nginx pod</p> <pre><code>kubectl create deployment nginx --image=nginx --replicas=3 -n dev</code></pre> <p>监控创建进度</p> <pre><code>kubectl get deploy -n dev -w</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/daf83d905bb59fce10e866f4131bc746.jpg" alt="k8s入门之Deployment"></p> <p>可以看到副本可用数量从0变到3</p> <p><strong>2.查看Deployment的描述</strong></p> <pre><code>kubectl describe deploy nginx -n dev</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/5db95cd398966d02c1f95f7e379f65c5.jpg" alt="k8s入门之Deployment"></p> <p>可以看到NewReplicaSet的名称为nginx-6799fc88d8</p> <p><strong>3.查看Deployment管理的pod</strong></p> <pre><code>kubectl get pod -n dev -owide --show-labels</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/21e6b6b752352da1dfb09137e99d71e9.jpg" alt="k8s入门之Deployment"></p> <p>可以看到Name列是ReplicaSet的名称加上一串6位的随机字符串，每个pod都有自己独立的IP。由于只有2台worker节点，其中2个pod被调度到了同一台节点worker02，另一个pod被调度到了worker01。</p> <p><strong>4.删除Deployment</strong></p> <pre><code>kubectl delete deploy nginx -n dev</code></pre> <p>删除Deployment，会把其管理的pod一起删除</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f7bd5aa2777c7a093e59d2c78025f6b4.jpg" alt="k8s入门之Deployment"></p> <p><strong>5.使用yaml文件创建Deployment</strong></p> <p>（1）新建dp-nginx.yaml文件，并输入以下内容</p> <pre><code>apiVersion: apps/v1 kind: Deployment metadata:   labels:     app: nginx   name: nginx   namespace: dev spec:   replicas: 3   selector:     # Deployment会匹配与这里设置的相同标签内容的pod     matchLabels:       app: nginx   # pod的模板描述   template:     metadata:       #定义pod的标签       labels:         app: nginx     spec:       containers:       - image: nginx         name: nginx</code></pre> <p>（2）创建Deployment对象</p> <pre><code>kubectl apply -f dp-nginx.yaml</code></pre> <p>查看创建的结果</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/16848c0440b6adc2279fb6de58405828.jpg" alt="k8s入门之Deployment"></p> <p><strong>二、扩缩容</strong></p> <p><strong>1.通过命令行扩容</strong></p> <p>先通过命令自动监听pod的变化</p> <pre><code>kubectl get pod -n dev -owide -w</code></pre> <p>再开启一个新的bash会话，通过以下命令扩容（增加副本数量：由3个变成5个）</p> <pre><code>kubectl scale --replicas=5 deploy/nginx -n dev</code></pre> <p>在监听bash窗口可以看到扩容过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ab16df1222f4674a21dd90cae964846b.jpg" alt="k8s入门之Deployment"></p> <p><strong>2.通过命令行缩容</strong></p> <p>先通过命令自动监听pod的变化</p> <pre><code>kubectl get pod -n dev -owide -w</code></pre> <p>再开启一个新的bash会话，通过命令缩容（减少副本数量：由5个变成2个）</p> <pre><code>kubectl scale --replicas=2 deploy/nginx -n dev</code></pre> <p>在监听bash窗口可以看到缩容过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/44f8788f3c98c1b7db24b9eff27fbf57.jpg" alt="k8s入门之Deployment"></p> <p><strong>3.通过yaml文件扩缩容</strong></p> <pre><code>kubectl edit deployment nginx -n dev</code></pre> <p>定位到replicase参数所在行，然后修改它的值</p> <p><strong>三、自愈&amp;故障转移</strong></p> <p><strong>1.自愈</strong></p> <p>手动删除某个pod，或者某个pod异常挂掉，k8s会自动创建一个新的pod。</p> <p>先通过命令自动监听pod的变化</p> <pre><code>kubectl get pod -n dev -owide -w</code></pre> <p>再开启一个新的bash会话，手动删除一个pod</p> <pre><code>kubectl scale --replicas=2 deploy/nginx -n dev</code></pre> <p>在监听bash窗口可以看到创建过程</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9c275722522d457a600cd10c4e7c373f.jpg" alt="k8s入门之Deployment"></p> <p><strong>2.故障转移</strong></p> <p>对worker02关机，k8s需要5分钟(可配置)才能感知从而启动自愈功能。</p> <p>通过命令自动监听pod的变化</p> <pre><code>kubectl get pod -n dev -owide -w</code></pre> <p>大概等了5分钟左右的时间，可以看到worker01上启动了2个新的pod。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/463660654d32183b6d7ce557bad12734.jpg" alt="k8s入门之Deployment"></p> <p>这个时候如果重新启动worker02，部署在它上面的2个旧pod会立马删除。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9be4a24683f07cc83cbe81dbc12aa1f1.jpg" alt="k8s入门之Deployment"></p> <p><strong>四、滚动更新</strong></p> <p><strong>1.更改镜像版本</strong></p> <p>把nginx的镜像版本改为1.20</p> <pre><code>kubectl&nbsp;edit&nbsp;deploy&nbsp;nginx&nbsp;-n&nbsp;dev # image: nginx:1.20</code></pre> <p>查看滚动更新状态</p> <pre><code>kubectl rollout status deploy nginx -n dev</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/38d111352210c982f542be100b5a2155.jpg" alt="k8s入门之Deployment"></p> <p>监听pod的创建过程</p> <pre><code>kubectl get pod -n dev -owide -w</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/cdc1862070edab91d2b8f87abf6d2838.jpg" alt="k8s入门之Deployment"></p> <p>查看新创建的pod描述，确实更新成了新的镜像版本</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1222c7ba3bad13d3017de38ddc25fab2.jpg" alt="k8s入门之Deployment"></p> <p><strong>2.回滚</strong></p> <p>（1）查看更新历史记录</p> <pre><code>kubectl rollout history deploy nginx -n dev</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e9b8670fe7ea434179600be285391bac.jpg" alt="k8s入门之Deployment"></p> <p>（2）查看某个指定版本的历史记录详情</p> <pre><code>kubectl rollout history deploy nginx -n dev --revision=2</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a1c45f11b7b3fed7489f8355867d592b.jpg" alt="k8s入门之Deployment"></p> <p>（3）回滚到上次的版本</p> <pre><code>kubectl rollout undo deploy nginx -n dev</code></pre> <p>回滚完成之后，查看新pod的描述，发现nginx镜像的版本是最新的</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4e777cb8e957a8cc23420e9a71982ee7.jpg" alt="k8s入门之Deployment"></p> <p>（4）回滚到指定的版本</p> <pre><code>kubectl rollout undo deploy nginx -n dev --to-revision=2</code></pre> <p><strong>五、总结</strong></p> <p>类似 Deployment 这样的一个控制器，实际上都是由上半部分的控制器定义（包括期望状态），加上下半部分的被控制对象的模板组成的</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6558e40d207b64aaf108605d0421a796.jpg" alt="k8s入门之Deployment"></p> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1107.htm">页面搭建系统的那些事儿_在线工具</a></p>
                                                        <p>下一个：<a href="/html/category/article-1109.htm">vue项目使用echarts（封装函数：监听dom元素尺寸变化resize echarts）</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1275.htm" title="feign实现远程调用">feign实现远程调用</a></li>
                        <li class="py-2"><a href="/html/category/article-1308.htm" title="HTML 5验证有用吗">HTML 5验证有用吗</a></li>
                        <li class="py-2"><a href="/html/category/article-1318.htm" title="vue项目中,如何实现excel的导入导出excel导入功能-组件封装">vue项目中,如何实现excel的导入导出excel导入功能-组件封装</a></li>
                        <li class="py-2"><a href="/html/category/article-1315.htm" title="关于对称算法中数据的填充模式">关于对称算法中数据的填充模式</a></li>
                        <li class="py-2"><a href="/html/category/article-1282.htm" title="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI">Azure DevOps通过Azure Devops部署一个.NET Core WebAPI</a></li>
                        <li class="py-2"><a href="/html/category/article-1279.htm" title="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段">Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段</a></li>
                        <li class="py-2"><a href="/html/category/article-1274.htm" title="分享MongoDB修改oplog大小的4种方法_MongoDB_">分享MongoDB修改oplog大小的4种方法_MongoDB_</a></li>
                        <li class="py-2"><a href="/html/category/article-1267.htm" title="docker-compose 配置kafka_Docker Compose 引用环境变量">docker-compose 配置kafka_Docker Compose 引用环境变量</a></li>
                        <li class="py-2"><a href="/html/category/article-1285.htm" title="C语言栈与队列面试题详解_C 语言">C语言栈与队列面试题详解_C 语言</a></li>
                        <li class="py-2"><a href="/html/category/article-1280.htm" title="Arthas之实例操作">Arthas之实例操作</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">28</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>