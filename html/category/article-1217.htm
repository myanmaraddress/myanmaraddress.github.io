<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1217.htm" />
    <title>go微服务框架Kratos简单使用总结 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>go微服务框架Kratos简单使用总结</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p>Kratos是B站开源的一款go的微服务框架，最近PS5上的 战神·诸神黄昏比较火，主角就是奎托斯。这个框架的名字就取自他。</p> <p>在进行框架选型时，对比了目前主流的很多go微服务框架，如Zero，最后对比之下，选择了Kratos，原因是Kratos给了开发人员更多的选择和更多的自由空间，方便自定义实现和选用很多东西，可以更快的适应已有的服务 以及 让开发者更快地上手使用（因为选用自己熟悉的工具）。</p> <blockquote> <p>Kratos并不绑定于特定的基础设施，不限定于某种注册中心，或数据库ORM等，所以您可以十分轻松地将任意库集成进项目里，与Kratos共同运作。</p> </blockquote> <h4><a id="httpsgokratosdevdocs_6" rel="nofollow"></a>原则<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://go-kratos.dev/docs/#%E5%8E%9F%E5%88%99"  rel="nofollow"></a></h4> <ul> <li><strong>简单</strong>：不过度设计，代码平实简单；</li> <li><strong>通用</strong>：通用业务开发所需要的基础库的功能；</li> <li><strong>高效</strong>：提高业务迭代的效率；</li> <li><strong>稳定</strong>：基础库可测试性高，覆盖率高，有线上实践安全可靠；</li> <li><strong>健壮</strong>：通过良好的基础库设计，减少错用；</li> <li><strong>高性能</strong>：性能高，但不特定为了性能做 hack 优化，引入 unsafe ；</li> <li><strong>扩展性</strong>：良好的接口设计，来扩展实现，或者通过新增基础库目录来扩展功能；</li> <li><strong>容错性</strong>：为失败设计，大量引入对 SRE 的理解，鲁棒性高；</li> <li><strong>工具链</strong>：包含大量工具链，比如 cache 代码生成，lint 工具等等；</li> </ul> <p>这是kratos官方挂出的框架设计出发点，其中有几点是在现有工具中尤为宝贵，并且十分契合go开发风格的。如 简单，高效，扩展性，容错性。</p> <p>有人说，使用go最大的好处就是无论什么人，他们水平高或低，可以写出相近的代码，大家都读得懂。</p> <p>我也认为，go的上手难度较低，风格相对固定，性能也还可以，所以，在中国的互联网企业风靡了起来。</p> <p>而kratos这个框架，无疑将go的这些特性进行了放大。接下来，我会将我在实际使用中，最关注的一些点做些分享和记录。</p> <hr/> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221120/ce35620b88939c61a9650b0103bfa937.jpg" alt="go微服务框架Kratos简单使用总结"></p> <p>首先，是整个kratos的架构风格图，可以看到kratos将整个服务大体分为了3层，API / Service / DB</p> <p>左侧标注了在 Service和DB层，使用依赖注入（DI）进行实现，工具名称为Wire。</p> <p>从这张图中，可以看到Wire这个工具几乎贯穿Kratos架构始终，是一个大角色。</p> <hr/> <h3><a id="1__38" rel="nofollow"></a>1. 传输协议</h3> <p>支持http + grpc两种调用方式，通过编写proto文件来实现。</p> <p>一般，http开放给外部调用，可以使用restful风格定义。grpc面向内部微服务之间进行调用。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221120/a0efc183abff559a490e1b9bf1af0424.jpg" alt="go微服务框架Kratos简单使用总结"></p> <p> 在项目中，会以这样的结构出现，并且可以对不同协议进来的请求进行处理，添加处理的中间件，如<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://go-kratos.dev/docs/component/middleware/auth"  rel="nofollow">权限校验</a>、<code>熔断限流</code>等等。</p> <h3><a id="2__48" rel="nofollow"></a>2. 日志</h3> <p>在kratos中，可以自定义日志框架选型，设置日志格式和输出内容，然后将logger对象以依赖注入的方式，分配给server中的grpc server和http server，这样就可以实现每次收到请求后的日志打印。</p> <p>将logger对象以依赖注入的方式，注入到业务层，就可以在业务层中统一使用logger进行输出。</p> <h3><a id="3__54" rel="nofollow"></a>3. 错误处理</h3> <p>在grpc中，比较通用的一种错误处理方式就是直接通过 proto 预定义定义错误码，然后通过 proto-gen-go 生成帮助代码，直接返回 error。</p> <pre><code class="prism language-json"><span class="token punctuation">{<!-- --></span><span class="token comment">// 错误码，跟 http-status 一致，并且在 grpc 中可以转换成 grpc-status</span><span class="token string-property property">"code"</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token comment">// 错误原因，定义为业务判定错误码</span><span class="token string-property property">"reason"</span><span class="token operator">:</span><span class="token string">"USER_NOT_FOUND"</span><span class="token punctuation">,</span><span class="token comment">// 错误信息，为用户可读的信息，可作为用户提示内容</span><span class="token string-property property">"message"</span><span class="token operator">:</span><span class="token string">"invalid argument error"</span><span class="token punctuation">,</span><span class="token comment">// 错误元信息，为错误添加附加可扩展信息</span><span class="token string-property property">"metadata"</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token string-property property">"foo"</span><span class="token operator">:</span><span class="token string">"bar"</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>结构是这样的。这里可以发现，为了兼容grpc，在http的返回结果中，code也无法自定义，只能跟随httpcode。所以这里客户端或者第三方去处理错误时，需要判断reason字段。</p> <h3><a id="4__75" rel="nofollow"></a>4. 配置管理</h3> <p>使用proto文件定义配置和生成struct，然后将yaml中的内容读取到对应struct 字段中进行使用。</p> <p>在这里我们可以注意到，在kratos中，除了传输格式使用了proto进行定义之外，错误处理和配置管理，也使用了proto来进行。可以说，一切皆proto。</p> <h3><a id="5_wire_81" rel="nofollow"></a>5. wire</h3> <p><strong>Wire</strong> 是一个灵活的依赖注入工具（需要安装），通过自动生成代码的方式在编译期完成依赖注入。通过<em>Wire</em> 进行初始化代码，可以很好地解决组件之间的耦合，以及提高代码维护性。</p> <p>打开Kratos的示例项目，从main入口看，有一处调用了wireApp方法，这里就是一切的源头（万恶之源）。</p> <p>这个方法调用的是main同目录的wire文件中的wireApp方法，同目录的wire_gen.go实现了此方法。</p> <p>wire_gen中去实例化不同service和组建的对象，用于调用。关系图如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221120/562c91bec5a1c18d95214576e193cf88.jpg" alt="go微服务框架Kratos简单使用总结"></p> <p>在每个模块中，只需要一个<em>ProviderSet</em> 提供者集合，就可以在 wire 中进行依赖注入。</p> <p>简单的描述一下：有一个数据库连接对象，service需要操作数据库，依赖数据库连接对象。这时候我们可以声明数据库连接对象在<em>ProviderSet</em>集合，然后在service对象处声明，我需要一个数据库连接对象。 然后我们使用wire工具，就可以自动帮我们生成依赖注入的代码。</p> <p>这个功能使用的时候，我才真正明白了依赖注入。和使用java的依赖注入是完全不同的感觉。有了显式的依赖注入，让代码间的依赖关系一目了然。当我们查看同事代码时，只需要点开wire_gen.go 代码，什么处理过程 需要依赖哪些组件，清清楚楚，大大提高了代码的维护性。</p> </div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1216.htm">数据建模软件Chiner，颜值与实用性并存</a></p>
                                                        <p>下一个：<a href="/html/category/article-1218.htm">解决：is not eligible for getting processed by all BeanPostProcessors</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1309.htm" title="sqlserver 中使用sqlcmd 执行几百M的.sql文件">sqlserver 中使用sqlcmd 执行几百M的.sql文件</a></li>
                        <li class="py-2"><a href="/html/category/article-1297.htm" title="vue2设置保存自动执行run lint配置步骤">vue2设置保存自动执行run lint配置步骤</a></li>
                        <li class="py-2"><a href="/html/category/article-1637.htm" title="Java基础之浅谈异常与了解断言">Java基础之浅谈异常与了解断言</a></li>
                        <li class="py-2"><a href="/html/category/article-1291.htm" title="Springcloud通过maven打包包含公共common模块的项目">Springcloud通过maven打包包含公共common模块的项目</a></li>
                        <li class="py-2"><a href="/html/category/article-1282.htm" title="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI">Azure DevOps通过Azure Devops部署一个.NET Core WebAPI</a></li>
                        <li class="py-2"><a href="/html/category/article-1281.htm" title="使用EasyExcel实现自定义表头导出">使用EasyExcel实现自定义表头导出</a></li>
                        <li class="py-2"><a href="/html/category/article-1340.htm" title="请说一下你对分布式锁的理解，以及分布式锁的实现">请说一下你对分布式锁的理解，以及分布式锁的实现</a></li>
                        <li class="py-2"><a href="/html/category/article-1274.htm" title="分享MongoDB修改oplog大小的4种方法_MongoDB_">分享MongoDB修改oplog大小的4种方法_MongoDB_</a></li>
                        <li class="py-2"><a href="/html/category/article-1311.htm" title="vue+Echarts绘制动态折线图">vue+Echarts绘制动态折线图</a></li>
                        <li class="py-2"><a href="/html/category/article-1307.htm" title="在JavaScript中实现优先级排序">在JavaScript中实现优先级排序</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>