<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1115.htm" />
    <title>数据库事务的四大特性和四个隔离级别 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>数据库事务的四大特性和四个隔离级别</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2><a id="_0" rel="nofollow"></a>一、数据库事务的四大特性</h2> <p>事物是指作为一个单元的一组有序的数据库操作，单元是不可分割的，如果一组数据的所有操作都执行成功，事物完成，进行事物提交(commit)，其修改作用于所有数据库进程。有一个操作执行失败，事务执行失败进行回滚（rollback)，该事务所有操作的影响被取消；</p> <h3><a id="Atomicity_2" rel="nofollow"></a>原子性（Atomicity）</h3> <p>事物的操作要么全部执行成功提交，要么全部失败进行事物回滚，执行成功，对数据的改变将作用于其它数据库，执行失败，将不对其它数据库产生影响；</p> <h3><a id="Consistency_4" rel="nofollow"></a>一致性（Consistency）</h3> <p>事务的执行使数据库从一个状态到另一个状态，状态必须保持一致性，比如两个人进行转账，两个的总金额是1000，不过他们进行了多少次转账（事务），两个人的总额1000是不变的，这就是一致性状态；</p> <h3><a id="Osolation_6" rel="nofollow"></a>持久性（Osolation）</h3> <p>事务执行成功，对数据库数据的修改是永久性的，即使服务器宕机，也不会丢失已提交事务的操作；</p> <h3><a id="durability_8" rel="nofollow"></a>隔离性（durability）</h3> <p>多个线程并行对表执行事务，每个事务对其它事务都是隔离互不影响的，比如有两个线程A和B对同一数据S进行事务执行，线程A在获取数据S时，线程B的事务要么已经提交结束，要么还未执行</p> <h2><a id="_11" rel="nofollow"></a>二、事务四个隔离级别</h2> <p>数据库隔离的四个级别分别是：1、读取未提交；2、读取已提交；3、可重读；4、可串行化。隔离级别采取不同的锁类型来实现，若读取的是同一个数据可能发生脏读、幻读等问题</p> <h3><a id="Read_Uncommitted_13" rel="nofollow"></a>读未提交（Read Uncommitted）</h3> <p>在该隔离级别，所有事物都可以看到其它事务未提交的执行结果，事务可读取其它事务未提交的数据；也就是“脏读”</p> <h3><a id="Read_Committed_15" rel="nofollow"></a>读已提交（Read Committed）</h3> <p>事务只能看见其它事务已经提交的结果数据，在执行查询操作期间，同一事务的其它操作可能在这一操作期间进行了commit，到查询的结果集和上次查询的结果集不一样，也就是“不可重复读”</p> <h3><a id="_repeatable_Read_18" rel="nofollow"></a>可重复读 （repeatable Read）</h3> <p>MySql的默认隔离级别，保证同一事务的不同操作在并发读取的行数据是一样的。在事务读取某一范围的数据期间，不保证其它事务对该范围写入新行，造成事务下次查询的时候，多了新的数据行，也就是所谓的**“幻读”**，Innodb通过版本控制解决了这一问题。</p> <h3><a id="Serializable_20" rel="nofollow"></a>序列化（Serializable）</h3> <p>隔离的最高级别，通过强制让事务有序执行，解决幻读等问题。事务执行期间，对每个数据行加了共享锁，可能会引起其它事务查询超时等现象;</p> <h2><a id="_23" rel="nofollow"></a>三、脏读、幻读、不可重复读</h2> <h3><a id="Drity_Read__24" rel="nofollow"></a>脏读（Drity Read ）</h3> <p>事务读取了其它事务执行未提交的数据行</p> <h3><a id="Phantom_Read_27" rel="nofollow"></a>幻读（Phantom Read）</h3> <p>事务在检索期间，其它事物是数据执行了更新操作，导致前后两次检索的数据不一样</p> <h3><a id="_Nonrepeatable_Read_30" rel="nofollow"></a>不可重复度 （Nonrepeatable Read）</h3> <p>事物在检索期间，同一事物的不同操作（实例）对数据行修改后进行了commit，导致前后检索的数据行不一致</p> <h3><a id="_34" rel="nofollow"></a>与隔离级别的关系</h3> <table> <thead> <tr> <th>隔离级别</th> <th>脏读</th> <th>不可重复读</th> <th>幻读</th> </tr> </thead> <tbody> <tr> <td>读未提交</td> <td>+</td> <td>+</td> <td>+</td> </tr> <tr> <td>读已提交</td> <td>x</td> <td>+</td> <td>+</td> </tr> <tr> <td>可重复读</td> <td>x</td> <td>x</td> <td>+</td> </tr> <tr> <td>可序列化</td> <td>x</td> <td>x</td> <td>x</td> </tr> </tbody> </table> </div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1114.htm">SpringBoot中Starter的作用是什么</a></p>
                                                        <p>下一个：<a href="/html/category/article-1116.htm">Envoy熔断限流实践Rainbond基于RLS服务全局限流</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1304.htm" title="网络协议之:socket协议详解之Socket和Stream Socket">网络协议之:socket协议详解之Socket和Stream Socket</a></li>
                        <li class="py-2"><a href="/html/category/article-1339.htm" title="分享MySQL生产库内存异常增高的排查过程_Mysql_">分享MySQL生产库内存异常增高的排查过程_Mysql_</a></li>
                        <li class="py-2"><a href="/html/category/article-1302.htm" title="java高级用法之:在JNA中使用类型映射">java高级用法之:在JNA中使用类型映射</a></li>
                        <li class="py-2"><a href="/html/category/article-1289.htm" title="关于MySQL支持的所有字符集的查询是什么？">关于MySQL支持的所有字符集的查询是什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-1307.htm" title="在JavaScript中实现优先级排序">在JavaScript中实现优先级排序</a></li>
                        <li class="py-2"><a href="/html/category/article-1934.htm" title="朴素贝叶斯算法详解">朴素贝叶斯算法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1300.htm" title="Git基础Git对象的总结">Git基础Git对象的总结</a></li>
                        <li class="py-2"><a href="/html/category/article-1919.htm" title="React Ant Design Pro + .Net5 WebApi：后端环境搭建-IdentityServer4（二）授权模式">React Ant Design Pro + .Net5 WebApi：后端环境搭建-IdentityServer4（二）授权模式</a></li>
                        <li class="py-2"><a href="/html/category/article-1320.htm" title="46.java编程思想——传递和返回对象 只读类">46.java编程思想——传递和返回对象 只读类</a></li>
                        <li class="py-2"><a href="/html/category/article-1310.htm" title="TensorFlow 模型保存/载入的两种方法">TensorFlow 模型保存/载入的两种方法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>