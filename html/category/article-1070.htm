<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1070.htm" />
    <title>vue实现下拉效果 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>vue实现下拉效果</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>手把手教你实现vue下拉菜单组件<br /> 96 阿乾哥<br /> 0.4 2019.02.26 00:20* 字数 2050 阅读 930评论 0喜欢 3</p> <p>这篇文章我们一起来实现一个vue的下拉菜单组件。<br /> 像这种基本UI组件，网上已经有很多了，为什么要自己实现呢？其实并不是有意重复造轮子，而是想通过这个过程回顾一下vue组件开发的一些细节和注意事项。</p> <p>为什么选择下拉菜单组件？<br /> 因为：麻雀虽小五脏俱全，这个小小的组件涉及到了不少vue组件开发的知识点。<br /> 好了，那就开始吧！</p> <p>首先创建一个vue-cli的项目，笔者用的是vue-cli3，创建过程略，然后创建一个vue组件：DropDownList.vue</p> <p>在编写模板之前，我们来分析一下这个组件的视图结构和功能。<br /> 下拉菜单组件应该由两部分组成：</p> <pre><code>选中项的文本 待选菜单（默认隐藏）</code></pre> <p>它的主要功能包括：</p> <pre><code>鼠标经过下拉菜单组件，显示待选菜单 鼠标滑出下拉菜单组件，隐藏待选菜单 鼠标点击待选菜单中的条目，选中项文本更新，组件派发change事件 我们编写如下这样的模板：</code></pre> <p>选中项文本右侧的i标签，用来实现下拉菜单的三角形图标，在下文的css中我们用背景图来实现。<br /> 我们给根元素div已经添加了鼠标经过和滑出的回调函数，具体实现见下文。</p> <p>接下来我们为这个下拉菜单编写样式，在模板下方添加style标签，为了防止和其他组件的样式发生冲突，笔者建议大家在开发组件时，都给style加上scoped属性。另外，笔者在这里用到了scss，具体代码如下：</p> <p>关于样式，这里就不详细展开了，只说其中几个需要注意的点：</p> <pre><code>那个i元素的样式，我用到了一个网络图片，大家可以自行更换 待选菜单ul在css里并没有让它隐藏，因为我们要通过js来控制，具体原因见下文 待选菜单ul使用了绝对定位，因为当它展开的时候，不应该影响页面上其他元素的布局</code></pre> <p>现在这个组件大概长这个样子：</p> <p>1.png</p> <p>我们继续为这个组件定义属性，很显然，待选菜单应该作为属性传进来，一定不能是内部写死的，属性定义如下：</p> <p>这个页面引入并使用了我们的DropDownList组件，:dataList=“dplist” 绑定了当前页面的dplist数组到组件的dataList属性上，这个数组中的对象有一个city字段，我们希望此字段显示在下拉菜单上，因此我们设置组件的labelProperty为city，我们还给这个组件注册了change事件，这个组件内部需要派发这个事件，见下文。</p> <p>现在我们回到组件的模板部分，发现它都还是静态内容，我们把这些静态内容修改为通过属性渲染。</p> <p>其中待选菜单li的文本是 item[labelProperty] 这样就能正确的显示开发者指定的字段了。<br /> 我们看看选中项的文本表达式：dplLabel，我们并没有定义这个属性，也没有定义这个内部数据，它是哪儿来的？选中项的文本应该是 dataList[activeIndex][labelProperty] （这个很好理解吧，有问题请留言），但这个表达式太长了，写在模板里不利于维护，我们就把它写到计算属性里吧。</p> <p>computed:{<!-- --><br /> dplLable(){<!-- --><br /> return this.dataList[this.activeIndex][this.labelProperty]<br /> }<br /> }</p> <p>于是才有了上面的dplLabel，计算属性真的很好用呢。</p> <p>现在下拉菜单的视图和数据关联部分我们已经写完了，接下来我们要实现它的功能。</p> <p>第一步是先让待选菜单默认隐藏起来，这里我们为什么不直接用css的display:none呢，然后鼠标经过的时候display:block不就可以了吗？因为这样的话，我们无法实现点击待选菜单条目的时候让它隐藏，体验不好。我们用js来控制，但vue对直接访问dom元素支持的并不好，我们要想在组件初始化的时候访问dom元素，有一个最方便的做法，那就是：自定义指令。</p> <p>我们为下拉菜单组件添加局部自定义指令，代码如下：</p> <p>directives:{<!-- --><br /> dpl:{<!-- --><br /> bind(el){<!-- --><br /> el.style.display = “none”;<br /> }<br /> }<br /> },</p> <p>这个dpl就是自定义指令啦，请忽略我笨拙的命名哈！然后我们在自定义指令的钩子函数bind方法中，访问el元素，控制它的style属性display:none; 最后，把这个自定义指令加到模板里面的ul标签上。别忘了要加v-，现在看看效果，待选菜单已经隐藏了。</p> <ul></ul> <p>我们利用自定义指令钩子函数访问dom元素，实现了对dom的控制，这一点非常实用！</p> <p>让我们继续实现最开始为下拉菜单定义的鼠标经过和鼠标滑出的监听，实现待选菜单的显示与隐藏。</p> <p>onDplOver(event){<!-- --><br /> let ul = event.currentTarget.childNodes[1];<br /> ul.style.display = “block”;<br /> },<br /> onDplOut(event){<!-- --><br /> let ul = event.currentTarget.childNodes[1];<br /> ul.style.display = “none”;<br /> },</p> <p>我们在鼠标事件中，访问event的currentTarget对象，为什么不是target？因为下拉菜单的子元素也会触发这个事件，如果访问target，可能不会是我们预期的顶层元素。</p> <p>最后一步，我们实现待选菜单条目的点击事件，点击后，待选菜单隐藏，修改内部状态，派发change事件。</p> <p>onLiClick(index){<!-- --><br /> let path = event.path || (event.composedPath &amp;&amp; event.composedPath()) //兼容火狐和safari<br /> path[1].style.display = “none”;<br /> this.activeIndex = index;<br /> this.$emit(“change”, {<!-- --><br /> index:index,<br /> value:this.dataList[index]<br /> })<br /> }</p> <p>这里有一个细节需要注意，我们要通过li元素找到外层ul元素，但path不支持火狐和safari，好在这两个浏览器支持composedPath，因此才有了第一行代码的兼容写法。然后通过修改内部数据activeIndex实现选中项文本的更新，最后调用emit方法向父元素派发change事件，别忘了把事件对象封装好传出去。</p> <p>完整的代码如下：</p> <p>以上为大家展示了vue如何实现一个下拉菜单组件，虽然比较简单，但也基本涉及到了组件开发常用的一些特性。</p> </div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1069.htm">00022.16 序列化与反序列化三：有些属性不需要序列化的处理办法用transient或者static修饰</a></p>
                                                        <p>下一个：<a href="/html/category/article-1071.htm">前端发送复杂JSON数据，后端使用@RequestBody接收</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1320.htm" title="46.java编程思想——传递和返回对象 只读类">46.java编程思想——传递和返回对象 只读类</a></li>
                        <li class="py-2"><a href="/html/category/article-1360.htm" title="Gin增删改查demo">Gin增删改查demo</a></li>
                        <li class="py-2"><a href="/html/category/article-1297.htm" title="vue2设置保存自动执行run lint配置步骤">vue2设置保存自动执行run lint配置步骤</a></li>
                        <li class="py-2"><a href="/html/category/article-1295.htm" title="带你快速认识NamenodeHA和Yarn HA,为搭建HadoopHA集群打下基础!">带你快速认识NamenodeHA和Yarn HA,为搭建HadoopHA集群打下基础!</a></li>
                        <li class="py-2"><a href="/html/category/article-1314.htm" title="vue&#8211;vuex 中 Modules 详解">vue&#8211;vuex 中 Modules 详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1285.htm" title="C语言栈与队列面试题详解_C 语言">C语言栈与队列面试题详解_C 语言</a></li>
                        <li class="py-2"><a href="/html/category/article-1282.htm" title="Azure DevOps通过Azure Devops部署一个.NET Core WebAPI">Azure DevOps通过Azure Devops部署一个.NET Core WebAPI</a></li>
                        <li class="py-2"><a href="/html/category/article-1919.htm" title="React Ant Design Pro + .Net5 WebApi：后端环境搭建-IdentityServer4（二）授权模式">React Ant Design Pro + .Net5 WebApi：后端环境搭建-IdentityServer4（二）授权模式</a></li>
                        <li class="py-2"><a href="/html/category/article-1349.htm" title="父组件调用子组件的方法-子组件向父组件传值">父组件调用子组件的方法-子组件向父组件传值</a></li>
                        <li class="py-2"><a href="/html/category/article-1291.htm" title="Springcloud通过maven打包包含公共common模块的项目">Springcloud通过maven打包包含公共common模块的项目</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">40</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>