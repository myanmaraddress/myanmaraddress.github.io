<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1126.htm" />
    <title>Ubuntu安装开发者平台Backstage - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>Ubuntu安装开发者平台Backstage</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<h2 id="ubuntu安装开发者平台backstage">Ubuntu安装开发者平台Backstage</h2> <p><strong>什么是Backstage?</strong></p> <p>Backstage是一个构建开发者门户的开源平台。通过支持一个集中的软件分类，Backstage可以保存并发布你的微服务和基础设施，让你的产品团队迅速交付高质量的应用。Backstage由Spotify公司内部研发使用，是一个能储存所有你开发工具的门户应用，它能极大提高开发者的生产效率，并且创建了一套在任何地方为工程化组织提供新的更好的标准的开发门户。</p> <p>官方站点：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://backstage.io/"  target="_blank" rel="nofollow">Backstage.io</a></p> <p><strong>Backstage组成</strong></p> <ul> <li><code>Backstage Software Catalog</code> - 用来管理所有软件（包括微服务、库、数据管道、站点、机器学习模型等等）。</li> <li><code>Backstage Software Template</code> - 用来快速启动项目并标准化你的组织最佳实践所使用的工具。</li> <li><code>Backstage TechDocs</code> - 用来轻松创建、维护、查找和使用技术文档，使用文档即代码的方法。</li> <li><code>Open Source Plugins</code> - 更好地拓展Backstage自定义能力和功能性。</li> </ul> <p>Backstage开发平台支持各大代码宿主供应商如GitHub、GitHub Enterprise、Bitbucket、Azure DevOps、GitLab、GitLab Enterprise等，支持各大存储供应商，如：Backstage应用本地文件系统、Google云存储(GCS)服务、亚马逊Web服务S3、Azure对象存储服务、OpenStack Swift等。</p> <p><strong>当前的Backstage版本</strong></p> <p>在3月17日刚刚发布了1.0版本。</p> <p><strong>安装Backstage.io应用</strong></p> <ul> <li>更新Ubuntu已安装的组件<br /><code>sudo apt update</code> - 更新Ubuntu</li> <li>安装Nodejs <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/nvm-sh/nvm#install--update-script"  target="_blank" rel="nofollow">GitHub - nvm-sh/nvm: Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions</a></li> <li>使用命令<code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</code> 下载Node.js版本管理器nvm的安装脚本并执行安装</li> <li>安装后设置路径的快捷访问 <pre><code class="language-Bash">export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] &amp;&amp; printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")" [ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh" # This loads nvm</code></pre> </li> <li>使用<code>nvm install --lts</code>命令安装LTS版本的Node.js，此版本受Node.js长期支持。</li> </ul> </li> <li>安装包管理器yarn，参考<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://classic.yarnpkg.com/en/docs/install#windows-stable"  target="_blank" rel="nofollow">Installation | Yarn (yarnpkg.com)</a>。 <ul> <li>使用命令<code>sudo apt install make</code>安装make工具</li> <li>在全局安装yarn包管理器工具，<code>npm install --global yarn</code>。</li> <li>安装成功后使用命令<code>yarn --version</code>查看yarn版本检查yarn是否正确安装。</li> </ul> </li> <li>安装Git，参考<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/git-guides/install-git"  target="_blank" rel="nofollow">Git Guides - install git · GitHub</a>。 <ul> <li>使用命令<code>sudo apt-get install git-all</code>安装Git。</li> <li>使用命令<code>git version</code>查看Git版本检查Git是否正确安装。</li> </ul> </li> <li>安装Docker，参考<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.docker.com/engine/install/"  target="_blank" rel="nofollow">Install Docker Engine | Docker Documentation</a>和<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.docker.com/engine/install/ubuntu/"  target="_blank" rel="nofollow">Install Docker Engine on Ubuntu | Docker Documentation</a>两篇文章。 <ul> <li>首先，如果已安装过Docker使用命令<code>sudo apt-get remove docker docker-engine docker.io containerd runc</code>卸载旧版本Docker。</li> <li>使用命令<code>sudo apt-get update</code>更新Ubuntu已安装组件。</li> <li>使用命令<code>curl -fsSL https://get.docker.com -o get-docker.sh</code>下载Docker最新的安装脚本。</li> <li><code>sudo sh get-docker.sh</code>，执行安装脚本安装Docker。</li> <li>使用命令<code>sudo docker run hello-world</code>加载HelloWorld测试容器并执行内部代码，检查Docker是否安装成功。</li> </ul> </li> </ul> <p>以上所有安装完成后，执行<code>npx @backstage/create-app</code>安装backstage应用，回答问题如下：</p> <ul> <li>填写Backstage应用名字，如my-backstage-app。</li> <li>使用SQL-Lite作为Backstage的数据存储。</li> </ul> <p>为了打开80和443端口配置HTTP协议和HTTPS协议的发布，Ubuntu系统参考文章<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://stackoverflow.com/questions/60372618/nodejs-listen-eacces-permission-denied-0-0-0-080"  target="_blank" rel="nofollow">提供80、443端口权限</a>进行设置。</p> <p>运行以下命令：</p> <ul> <li><code>yarn install</code>安装所有必需的程序包。</li> <li><code>yarn build</code>构建Backstage程序包。</li> <li><code>yarn dev</code>已开发方式启动，前后端端口分别为3000和7007，可以通过http://localhost:3000/进行访问。</li> </ul> <p>如果要进行更进一步的配置，需要编辑app-config.yaml文件。</p> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1125.htm">ResponseBody 和 RequestBody的区别</a></p>
                                                        <p>下一个：<a href="/html/category/article-1127.htm">MySQL 事务和锁_在线工具</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1320.htm" title="46.java编程思想——传递和返回对象 只读类">46.java编程思想——传递和返回对象 只读类</a></li>
                        <li class="py-2"><a href="/html/category/article-1350.htm" title="小程序怎么自定义导航栏，导航栏放图片、设置高度">小程序怎么自定义导航栏，导航栏放图片、设置高度</a></li>
                        <li class="py-2"><a href="/html/category/article-1276.htm" title="maven项目打包成war包并部署到tomcat上">maven项目打包成war包并部署到tomcat上</a></li>
                        <li class="py-2"><a href="/html/category/article-1314.htm" title="vue&#8211;vuex 中 Modules 详解">vue&#8211;vuex 中 Modules 详解</a></li>
                        <li class="py-2"><a href="/html/category/article-1313.htm" title="二叉树与堆">二叉树与堆</a></li>
                        <li class="py-2"><a href="/html/category/article-1279.htm" title="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段">Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段</a></li>
                        <li class="py-2"><a href="/html/category/article-1293.htm" title="基于Spring接口，集成Caffeine+Redis两级缓存">基于Spring接口，集成Caffeine+Redis两级缓存</a></li>
                        <li class="py-2"><a href="/html/category/article-1271.htm" title="c++基于模板匹配的手写数字识别（超详细）">c++基于模板匹配的手写数字识别（超详细）</a></li>
                        <li class="py-2"><a href="/html/category/article-1318.htm" title="vue项目中,如何实现excel的导入导出excel导入功能-组件封装">vue项目中,如何实现excel的导入导出excel导入功能-组件封装</a></li>
                        <li class="py-2"><a href="/html/category/article-1317.htm" title="JSON  传输数据出现415错误 Content type &#8216;application/xml;charset=UTF-8&#8217; not supported">JSON  传输数据出现415错误 Content type &#8216;application/xml;charset=UTF-8&#8217; not supported</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>