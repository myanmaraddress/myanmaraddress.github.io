<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1218.htm" />
    <title>解决：is not eligible for getting processed by all BeanPostProcessors - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>解决：is not eligible for getting processed by all BeanPostProcessors</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li><a href="#_1" rel="nofollow">问题描述</a></li> <li><a href="#_23" rel="nofollow">分析</a></li> <li><a href="#_40" rel="nofollow">总结</a></li> <li><a href="#_43" rel="nofollow">解决</a></li> <li> <ul> <li><a href="#1_44" rel="nofollow">方案1：延迟初始化</a></li> <li><a href="#2RoleBeanDefinitionROLE_INFRASTRUCTURE_52" rel="nofollow">方案2：@Role(BeanDefinition.ROLE_INFRASTRUCTURE)</a></li> </ul> </li> <li><a href="#_74" rel="nofollow">参考</a></li> </ul> </li> </ul> </div> <h2><a id="_1" rel="nofollow"></a>问题描述</h2> <p>SpringBoot项目整合Shiro框架后启动，启动日志里大概会看到下面的日志：</p> <pre><code class="prism language-bash"><span class="token punctuation">..</span>.<span class="token punctuation">(</span>org.springframework.context.support.PostProcessorRegistrationDelegate<span class="token variable">$BeanPostProcessorChecker</span>:376<span class="token punctuation">)</span> - Bean<span class="token string">'userServiceImpl'</span> of<span class="token builtin class-name">type</span><span class="token punctuation">[</span>com.xxx.impl.UserServiceImpl<span class="token punctuation">]</span> is not eligible<span class="token keyword">for</span> getting processed by all BeanPostProcessors<span class="token punctuation">(</span>for example: not eligible<span class="token keyword">for</span> auto-proxying<span class="token punctuation">)</span><span class="token punctuation">..</span>.<span class="token punctuation">(</span>org.springframework.context.support.PostProcessorRegistrationDelegate<span class="token variable">$BeanPostProcessorChecker</span>:376<span class="token punctuation">)</span> - Bean<span class="token string">'jwtRealm'</span> of<span class="token builtin class-name">type</span><span class="token punctuation">[</span>com.xxx.JWTRealm<span class="token punctuation">]</span> is not eligible<span class="token keyword">for</span> getting processed by all BeanPostProcessors<span class="token punctuation">(</span>for example: not eligible<span class="token keyword">for</span> auto-proxying<span class="token punctuation">)</span><span class="token punctuation">(</span>org.springframework.context.support.PostProcessorRegistrationDelegate<span class="token variable">$BeanPostProcessorChecker</span>:376<span class="token punctuation">)</span> - Bean<span class="token string">'securityManager'</span> of<span class="token builtin class-name">type</span><span class="token punctuation">[</span>org.apache.shiro.web.mgt.DefaultWebSecurityManager<span class="token punctuation">]</span> is not eligible<span class="token keyword">for</span> getting processed by all BeanPostProcessors<span class="token punctuation">(</span>for example: not eligible<span class="token keyword">for</span> auto-proxying<span class="token punctuation">)</span><span class="token punctuation">(</span>org.springframework.context.support.PostProcessorRegistrationDelegate<span class="token variable">$BeanPostProcessorChecker</span>:376<span class="token punctuation">)</span> - Bean<span class="token string">'authorizationAttributeSourceAdvisor'</span> of<span class="token builtin class-name">type</span><span class="token punctuation">[</span>org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor<span class="token punctuation">]</span> is not eligible<span class="token keyword">for</span> getting processed by all BeanPostProcessors<span class="token punctuation">(</span>for example: not eligible<span class="token keyword">for</span> auto-proxying<span class="token punctuation">)</span></code></pre> <p>is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)、</p> <p><strong>中文描述：</strong><br /> xxx这个bean不能被所有的BeanPostProcessors处理（比如：自动代理（即：AOP））</p> <p>这几个bean（称为业务bean）不会被所有BeanPostProcessor（BPP）处理。BPP是spring的内置的基础bean，用于在实例化业务bean前后处理一些逻辑，可以更改业务bean的行为甚至返回另一个bean（大名鼎鼎的AOP就是通过BPP实现）。</p> <p>依赖了UserService的某个bean实现了BeanPostProcessor之类的接口，导致userServiceImpl被提前注入，导致无法被AOP。</p> <h2><a id="_23" rel="nofollow"></a>分析</h2> <p>在项目中的ShiroConfig文件中使用了ShiroFilterFactoryBean，它也实现了BeanPostProcessor接口。</p> <p>上面的错误信息，查看Spring源码，是在<code>BeanPostProcessorChecker</code>中定义的：</p> <pre><code class="prism language-java"><span class="token comment">/** 	 * BeanPostProcessor that logs an info message when a bean is created during 	 * BeanPostProcessor instantiation, i.e. when a bean is not eligible for 	 * getting processed by all BeanPostProcessors. 	 */</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token keyword">class</span><span class="token class-name">BeanPostProcessorChecker</span><span class="token keyword">implements</span><span class="token class-name">BeanPostProcessor</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></code></pre> <h2><a id="_40" rel="nofollow"></a>总结</h2> <p>出问题的原因：业务bean在BPP实例化前被实例化了。理想情况下应该让spring先实例化所有的BPP后，再实例化我们的业务bean，这样业务bean才能被所有BPP处理，如果有业务bean先于任何BPP实例化，那么这个业务bean就不会被还未实例化的BPP处理了，这个就是日志提示的原因。</p> <h2><a id="_43" rel="nofollow"></a>解决</h2> <h3><a id="1_44" rel="nofollow"></a>方案1：延迟初始化</h3> <p>可以使用延迟初始化来解决。延迟初始化会在IOC的时候先给出一个代理类，IOC之后的AOP这个BeanPostProcessor会正常地给它处理。</p> <p>具体做法<br /> 加一个注解即可：@Lazy。可以在两个地方加这个注解：字段、方法参数。<br /> 方法1：加到字段上<br /> 方法2：加到构造方法的参数上</p> <h3><a id="2RoleBeanDefinitionROLE_INFRASTRUCTURE_52" rel="nofollow"></a>方案2：@Role(BeanDefinition.ROLE_INFRASTRUCTURE)</h3> <p>方案说明<br /> 在Bean的声明上加个注解：@Role(BeanDefinition.ROLE_INFRASTRUCTURE)<br /> 表明这个bean是完全后台模式，不需要被代理。</p> <p>原理，就是<code>BeanPostProcessorChecker</code>的下面这个方法：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token class-name">Object</span><span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span><span class="token class-name">String</span> beanName<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>bean<span class="token keyword">instanceof</span><span class="token class-name">BeanPostProcessor</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token function">isInfrastructureBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBeanPostProcessorCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanPostProcessorTargetCount<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Bean '"</span><span class="token operator">+</span> beanName<span class="token operator">+</span><span class="token string">"' of type ["</span><span class="token operator">+</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"] is not eligible for getting processed by all BeanPostProcessors "</span><span class="token operator">+</span><span class="token string">"(for example: not eligible for auto-proxying)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="_74" rel="nofollow"></a>参考</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jianshu.com/p/b1209cd3686d"  rel="nofollow">https://www.jianshu.com/p/b1209cd3686d</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.baeldung.com/spring-not-eligible-for-auto-proxying"  rel="nofollow">https://www.baeldung.com/spring-not-eligible-for-auto-proxying</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://stackoverflow.com/questions/1201726/tracking-down-cause-of-springs-not-eligible-for-auto-proxying"  rel="nofollow">https://stackoverflow.com/questions/1201726/tracking-down-cause-of-springs-not-eligible-for-auto-proxying</a></p> </div> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1217.htm">go微服务框架Kratos简单使用总结</a></p>
                                                        <p>下一个：<a href="/html/category/article-1219.htm">springboot启动注解</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1316.htm" title="vscode指定扩展安装位置">vscode指定扩展安装位置</a></li>
                        <li class="py-2"><a href="/html/category/article-1313.htm" title="二叉树与堆">二叉树与堆</a></li>
                        <li class="py-2"><a href="/html/category/article-1319.htm" title="Web前端：Ruby On Rails与JavaScript的主要差异">Web前端：Ruby On Rails与JavaScript的主要差异</a></li>
                        <li class="py-2"><a href="/html/category/article-1300.htm" title="Git基础Git对象的总结">Git基础Git对象的总结</a></li>
                        <li class="py-2"><a href="/html/category/article-1287.htm" title="Spingboot Resttemplate连接池配置">Spingboot Resttemplate连接池配置</a></li>
                        <li class="py-2"><a href="/html/category/article-1290.htm" title="Jmeter监控平台搭建：JMeter+InfluxDB+Grafana">Jmeter监控平台搭建：JMeter+InfluxDB+Grafana</a></li>
                        <li class="py-2"><a href="/html/category/article-1299.htm" title="linux信号量semaphore">linux信号量semaphore</a></li>
                        <li class="py-2"><a href="/html/category/article-2538.htm" title="LSH-局部敏感哈希">LSH-局部敏感哈希</a></li>
                        <li class="py-2"><a href="/html/category/article-1962.htm" title="记录detector2使用中的PyYAML报错">记录detector2使用中的PyYAML报错</a></li>
                        <li class="py-2"><a href="/html/category/article-2832.htm" title="pytorch 自动构建任意层的深度神经网络(DNN)">pytorch 自动构建任意层的深度神经网络(DNN)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>