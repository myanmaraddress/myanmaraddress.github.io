<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://myanmaraddress.github.io/html/category/article-1142.htm" />
    <title>Spring Cache缓存框架详解 - Myanmar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/myanmaraddress/favicon.ico" type="image/x-icon"/>
    <link href="/assets/addons/xcblog/css/myanmaraddress/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!--theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/style.css" rel="stylesheet" type="text/css" media="all">
    <!--//theme-style-->
    <link href="/assets/addons/xcblog/css/myanmaraddress/popuo-box.css" rel="stylesheet" type="text/css" media="all" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- script -->
    <script src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/move-top.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/easing.js"></script>
    <link type="text/css" rel="stylesheet" href="/assets/addons/xcblog/css/myanmaraddress/jquery.mmenu.all.css" />
    <script type="text/javascript">
    $(window).load(function() {
        $('div.description').each(function() {
            $(this).css('display', 'block');
        });

        $('div.content-top-grid').hover(function() {
            $(this).children('.description').stop().fadeTo(500, 1);
        }, function() {
            $(this).children('.description').stop().fadeTo(500, 0);
        });

    });
    </script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/myanmaraddress/jquery.mmenu.js"></script>
    <script type="text/javascript">
    //	The menu on the left
    $(function() {
        $('nav#menu-left').mmenu();
    });
    </script>
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?e4890e777e20237a4f5a0c3a6a01049c";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
    <!--header-->
    <div class="header">
        <a class="navicon" href="#menu-left"> </a>
        <div class="container">
            <div class="header-matter">
                <h1>Spring Cache缓存框架详解</h1>
                <p>
                    <a href="/">首页</a> / <a href="/html/category/">文章分类</a> / 正文
                </p>
            </div>
        </div>
                <nav id="menu-left">
            <ul>
                                <li><a href="/">首页</a></li>
                                <li><a href="/html/category/">文章分类</a></li>
                                <li>
                    <a href="#">关于</a>
                </li>
                <li>
                    <a href="#">联系</a>
                </li>
            </ul>
        </nav>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            $(".scroll").click(function(event) {
                event.preventDefault();
                $('html,body').animate({ scrollTop: $(this.hash).offset().top }, 1000);
            });
        });
        </script>
    </div>
    <div class="clearfix"> </div>
    <!--//header-->
    <!--content-->
    <div class="content">
        <!--our-news-->
        <div class="our-news" id="news">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                        <div class="news">
                              				  				  				<h3 id="一序言">一、序言</h3> <p>Spring Cache是Spring体系下标准化缓存框架。Spring Cache有如下优势：</p> <ul> <li><strong>缓存品种多</strong></li> </ul> <p>支持缓存品种多，常见缓存<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.altitude.xin/blog/home/#/chapter/c1ca4e5acf124db885f8d900400c515d"  target="_blank" rel="nofollow">Redis</a>、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.altitude.xin/blog/home/#/chapter/13c02e630e46243bc967d55451712549"  target="_blank" rel="nofollow">EhCache</a>、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.altitude.xin/blog/home/#/chapter/d4ce4de96de9eda8a85d7a009c088944"  target="_blank" rel="nofollow">Caffeine</a>均支持。它们之间既能独立使用，也能组合使用。</p> <ul> <li><strong>平滑迁移</strong></li> </ul> <p>Spring内部支持的缓存，可实现无缝平滑迁移，无需修改业务逻辑。注解缓存的实现依赖于动态代理。</p> <p>大多数情况下使用的是注解版、少数情况下也能使用编程版。注解版与业务代码高度解藕，因其依托动态代理技术实现，使用场景上有一定的限制。编程版嵌入业务代码，代码顺序执行，无前置使用条件。</p> <h3 id="二基本概念">二、基本概念</h3> <h4 id="一核心概念">（一）核心概念</h4> <p>一个应用可以有多个缓存管理器，每个缓存管理器可以有多个缓存，每个缓存可以存储多条记录。</p> <h5 id="1缓存管理器">1、缓存管理器</h5> <p>缓存的存储介质不同、缓存连接不同的数据库、缓存值序列化等由缓存管理器配置。缓存管理器有主次之分，默认情况下使用主（首要）缓存管理器。</p> <p>当服务内只有一个CacheManager时，默认使用此缓存管理器；当超过一个缓存管理器时，需要使用<code>Primary</code>注解指定默认缓存管理器。</p> <h5 id="2缓存">2、缓存</h5> <p>Cache是一组配置相同缓存的集合，可以理解为命名空间，Spring Cache体系下的缓存生命时间是以Cache为单位的，不支持以Key为单位设置生存时间。不同的业务对应不同的缓存配置，应在缓存处予以区分。</p> <p>CacheName应具有显著的业务区分度以及过期时间区分度，并且以全局常量的方式提供，采取集中化管理的方式，禁止采用魔术变量的方式指定CacheName。</p> <h4 id="二补充内容">（二）补充内容</h4> <p>一般来说缓存的Key与Value均是String类型，特别是Value通常序列化成JSON串。</p> <h3 id="三注解版">三、注解版</h3> <p>用于基于注解的方式来管理缓存数据。注解缓存有如下优势：</p> <ul> <li><strong>高度解藕</strong></li> </ul> <p>使用注解来实现缓存，与业务高度解藕。</p> <ul> <li><strong>灵活管理</strong></li> </ul> <p>通过全局配置，不修改缓存逻辑，可实现如下效果：</p> <p>开发环境下，可禁用缓存，将流量打入数据库，尽早的暴露可能存在的性能瓶颈；测试环境开启缓存，进行压力测试等。</p> <h4 id="一动态代理">（一）动态代理</h4> <p>Spring Cache缓存注解版的原理以及缓存配置失败的典型案例。</p> <h5 id="1cglib动态代理">1、CGLib动态代理</h5> <p>缓存的实现底层技术支持是CGLib动态代理，在目标方法调用前、后分别追加相应的缓存操作，以达到添加缓存、更新缓存、删除缓存的操作。</p> <p>如果注解缓存配置未生效，检查目标调用方法是否被动态代理。</p> <h5 id="2配置失效">2、配置失效</h5> <p>配置失效是指尽管配置了缓存注解，但缓存仍然未生效。</p> <ul> <li>final类与final方法</li> </ul> <p>final类与final方法不满足CGLib动态代理的条件，因此缓存配置会失效。</p> <ul> <li>内部调用</li> </ul> <p>使用依赖注入的方式调用配置缓存的方法生效，方法间内部调用不生效。</p> <ul> <li>非public方法</li> </ul> <p>非public方法配置缓存不生效。</p> <h4 id="二常用注解">（二）常用注解</h4> <h5 id="1配置注解">1、配置注解</h5> <p><strong>（1）EnableCaching</strong></p> <p>标注于SpringBoot应用启动类上，添加此注解表示开启Spring Cache缓存；移除表示关闭缓存。如果在全局配置文件中添加如下配置，即使在启动类上标注EnableCaching注解，Spring Cache缓存然后是关闭状态。</p> <pre><code class="language-yml">spring:   cache:     type: none</code></pre> <p>如果应用中自定义独立于Spring容器的缓存，则不受此配置影响。</p> <p><strong>（2）CacheConfig</strong></p> <p>标注于类上，更具体的说是标注于业务服务类上。统一配置如下参数信息：</p> <table> <thead> <tr> <th>参数</th> <th>含义</th> <th>使用说明</th> </tr> </thead> <tbody> <tr> <td><code>cacheManager</code></td> <td>缓存管理器</td> <td>缺省指首要的CacheManager</td> </tr> <tr> <td><code>cacheNames</code></td> <td>缓存名</td> <td></td> </tr> <tr> <td><code>keyGenerator</code></td> <td>key值生成器</td> <td></td> </tr> </tbody> </table> <p>在类上统一进行配置，类下的方法自动继承相应的配置。</p> <h5 id="2缓存注解">2、缓存注解</h5> <p><strong>（1）Cacheable</strong></p> <p>添加缓存的核心注解，分两种情况：一是对应key值未有缓存数据，先执行方法，然后根据condition和unless条件决定是否添加缓存；二是对应key值已有缓存，不执行方法体，直接返回数据。</p> <p>参数<code>keyGenerator</code>与<code>key</code>是互斥的，当<code>key</code>存在时<code>keyGenerator</code>配置自动失效。</p> <ul> <li><strong>基础参数</strong></li> </ul> <table> <thead> <tr> <th>参数</th> <th>含义</th> <th>使用说明</th> </tr> </thead> <tbody> <tr> <td><code>cacheManager</code></td> <td>缓存管理器</td> <td>缺省指首要的CacheManager</td> </tr> <tr> <td><code>cacheNames</code></td> <td>缓存名</td> <td></td> </tr> <tr> <td><code>keyGenerator</code></td> <td>key值生成器</td> <td></td> </tr> <tr> <td><code>key</code></td> <td>key值</td> <td></td> </tr> </tbody> </table> <ul> <li><strong>高级参数</strong></li> </ul> <table> <thead> <tr> <th>参数</th> <th>含义</th> <th>默认值</th> <th>使用说明</th> </tr> </thead> <tbody> <tr> <td><code>condition</code></td> <td>缓存条件</td> <td></td> <td>指示满足条件方执行缓存操作，一般使用参数作为条件</td> </tr> <tr> <td><code>unless</code></td> <td>否定缓存</td> <td></td> <td>当条件为 true ，方法的返回值不会被缓存</td> </tr> <tr> <td><code>sync</code></td> <td>同步状态</td> <td>false</td> <td>表示将方法执行结果以何种方式存入缓存</td> </tr> </tbody> </table> <p><strong>（2）CachePut</strong></p> <p>更新缓存注解。不管对应key值是否有缓存数据，都执行。</p> <ul> <li><strong>基础参数</strong></li> </ul> <table> <thead> <tr> <th>参数</th> <th>含义</th> <th>使用说明</th> </tr> </thead> <tbody> <tr> <td><code>cacheManager</code></td> <td>缓存管理器</td> <td>缺省指首要的CacheManager</td> </tr> <tr> <td><code>cacheNames</code></td> <td>缓存名</td> <td></td> </tr> <tr> <td><code>keyGenerator</code></td> <td>key值生成器</td> <td></td> </tr> <tr> <td><code>key</code></td> <td>key值</td> <td></td> </tr> </tbody> </table> <ul> <li><strong>高级参数</strong></li> </ul> <table> <thead> <tr> <th>参数</th> <th>含义</th> <th>使用说明</th> </tr> </thead> <tbody> <tr> <td><code>condition</code></td> <td>缓存条件</td> <td>指示满足条件方执行缓存操作，一般使用参数作为条件</td> </tr> <tr> <td><code>unless</code></td> <td>否定缓存</td> <td>当条件为 true ，方法的返回值不会被缓存</td> </tr> </tbody> </table> <p><strong>（3）CacheEvict</strong></p> <p>主动清除缓存注解。</p> <ul> <li><strong>基础参数</strong></li> </ul> <table> <thead> <tr> <th>参数</th> <th>含义</th> <th>使用说明</th> </tr> </thead> <tbody> <tr> <td><code>cacheManager</code></td> <td>缓存管理器</td> <td>缺省指首要的CacheManager</td> </tr> <tr> <td><code>cacheNames</code></td> <td>缓存名</td> <td></td> </tr> <tr> <td><code>keyGenerator</code></td> <td>key值生成器</td> <td></td> </tr> <tr> <td><code>key</code></td> <td>key值</td> <td></td> </tr> </tbody> </table> <ul> <li><strong>高级参数</strong></li> </ul> <table> <thead> <tr> <th>参数</th> <th>含义</th> <th>默认值</th> <th>使用说明</th> </tr> </thead> <tbody> <tr> <td><code>condition</code></td> <td>缓存条件</td> <td></td> <td>指示满足条件方执行缓存操作，一般使用参数作为条件</td> </tr> <tr> <td><code>allEntries</code></td> <td>所有缓存</td> <td>false</td> <td>表示是否清空当前CacheName对应的所有缓存</td> </tr> <tr> <td><code>beforeInvocation</code></td> <td>调用前</td> <td>false</td> <td>表示是否在方法调用前清空缓存</td> </tr> </tbody> </table> <h5 id="3keygenerator">3、KeyGenerator</h5> <p>默认情况下使用SimpleKeyGenerator键值生成器，当不指定key值时，根据生成器规则，将方法参数转化为缓存Key值。</p> 			                        </div>

                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1141.htm">设计模式之六大原则——接口隔离原则（ISP）</a></p>
                                                        <p>下一个：<a href="/html/category/article-1143.htm">从同步函数 hello-world-dotnet 开始探索OpenFunction</a></p>
                                                    </div>

                                            </div>
                    <div class="col-md-3">
                    	<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-1638.htm" title="python之33个关键字详解_Python之33个关键字是哪些">python之33个关键字详解_Python之33个关键字是哪些</a></li>
                        <li class="py-2"><a href="/html/category/article-1306.htm" title="MeteoInfo-Java解析与绘图教程_java解析卫星FY-4A一级产品文件(HDF举例)_在线工具">MeteoInfo-Java解析与绘图教程_java解析卫星FY-4A一级产品文件(HDF举例)_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-1302.htm" title="java高级用法之:在JNA中使用类型映射">java高级用法之:在JNA中使用类型映射</a></li>
                        <li class="py-2"><a href="/html/category/article-1293.htm" title="基于Spring接口，集成Caffeine+Redis两级缓存">基于Spring接口，集成Caffeine+Redis两级缓存</a></li>
                        <li class="py-2"><a href="/html/category/article-1311.htm" title="vue+Echarts绘制动态折线图">vue+Echarts绘制动态折线图</a></li>
                        <li class="py-2"><a href="/html/category/article-1320.htm" title="46.java编程思想——传递和返回对象 只读类">46.java编程思想——传递和返回对象 只读类</a></li>
                        <li class="py-2"><a href="/html/category/article-1349.htm" title="父组件调用子组件的方法-子组件向父组件传值">父组件调用子组件的方法-子组件向父组件传值</a></li>
                        <li class="py-2"><a href="/html/category/article-1285.htm" title="C语言栈与队列面试题详解_C 语言">C语言栈与队列面试题详解_C 语言</a></li>
                        <li class="py-2"><a href="/html/category/article-1284.htm" title="Linux下 tomcat整体目录迁移">Linux下 tomcat整体目录迁移</a></li>
                        <li class="py-2"><a href="/html/category/article-1290.htm" title="Jmeter监控平台搭建：JMeter+InfluxDB+Grafana">Jmeter监控平台搭建：JMeter+InfluxDB+Grafana</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--//content-->
        <!--footer-->
    <div class="footer">
        <div class="container">
            <p>
                Myanmar Address 版权所有
                <br />
                Powered by WordPress
            </p>
        </div>
    </div>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>